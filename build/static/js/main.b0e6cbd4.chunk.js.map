{"version":3,"sources":["components/AuthProvider.js","settings.js","styles/nav.js","components/Landingnav.js","components/pages/Home.js","components/helperFunctions/api.js","components/pages/manager/managerStyles/ShiftStyles.js","components/calendarComponents/TimeBlock.js","components/pages/manager/SetShiftsComponents/EmployeeShiftBlock.js","components/pages/manager/SetShiftsComponents/EmployeeAvailabilityBlock.js","components/employeeComponents/employeeStyles/availabilityStyles.js","components/pages/manager/SetShiftsComponents/ShiftDayBlock.js","components/pages/employeePages/Availability.js","components/calendarComponents/AvailabilityBlock.js","components/calendarComponents/AvailabilityDayBlock.js","components/helperFunctions/AvailabilityDayBlockHelpers.js","components/pages/manager/SetShiftsComponents/Shifts.js","components/pages/manager/ViewSchedule/ScheduleShiftBlock.js","components/pages/manager/ViewSchedule/ScheduleDayBlock.js","components/pages/manager/ViewSchedule/EmployeeName.js","components/pages/manager/ViewSchedule/Schedule.js","components/Profile.js","components/pages/manager/addEmployees/ConfirmedEmployee.js","components/pages/manager/addEmployees/PendingEmployee.js","components/pages/manager/addEmployees/AddEmployees.js","components/pages/manager/Manager.js","components/calendarComponents/ShiftBlockTemplate.js","components/calendarComponents/DayTemplate.js","components/calendarComponents/WeekTemplate.js","components/pages/employeePages/Schedule.js","components/pages/employeePages/Employee.js","styles/registrationLogin/FormContainer.js","components/pages/registrationLoginPages/RegistrationLoginAPI.js","components/pages/registrationLoginPages/RegisterTemplate.js","components/pages/registrationLoginPages/RegisterManager.js","components/pages/registrationLoginPages/LoginPage.js","components/pages/registrationLoginPages/ResetPassword.js","components/PrivateRoute.js","components/Pages.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","localStorage","getItem","UpdateAuthContext","value","console","log","JSON","stringify","useAuth","useContext","useAuthUpdate","AuthProvider","props","useState","auth","setAuth","Provider","children","API_HOST","NavButton","styled","button","LandingNav","className","id","style","marginRight","to","color","Home","getFromServer","endpoint","a","refreshToken","refreshData","refreshStatus","fetch","method","headers","credentials","response","json","data","status","sendPostRequest","_data","body","sendDeleteRequest","pk","refresh","setItem","access","EmployeeList","div","TimeBlock","styledtop","styledheight","styledleft","styledwidth","styledhover","time","AvailabilityBlock","divTop","divLeft","divHeight","divWidth","divCursorStyle","EmployeeShiftBlock","cursorStyle","setCursorStyle","myStyle","styles","top","height","left","width","onMouseMove","event","mousePositionY","clientY","shiftBox","target","getBoundingClientRect","topBorder","bottomBorder","bottom","onMouseDown","changeShiftTime","moveShift","onDoubleClick","deleteShift","day","start_time","end_time","EmployeeAvailabilityBlock","shortID","require","timeRefsArray","timeRefs","current","employee","shiftStyles","setStyles","handleMouseMove","fixedTime","endMouseIndex","getTimeRefIndexFromMousePosition","endMouseTime","dataset","changeShift","timeIndex","topBorderTime","bottomBorderTime","topBorderIndex","findIndexFromTime","bottomBorderIndex","i","length","mousePosition","shiftData","mousePositionTime","callHandleMouseMove","document","addEventListener","cleanUpEventListeners","removeEventListener","initialIndex","moveShiftMouseMove","netIndex","startIndex","endIndex","startBorderTime","endBorderTime","startBorderIndex","endBorderIndex","newStartIndex","newEndIndex","newStartTime","newEndTime","handleOnLoadOrReload","cleanUpMoveShift","generateShiftHeight","shift","startTime","endTime","start_timeComponent","end_timeComponent","startPosition","offsetTop","offsetHeight","offsetLeft","offsetWidth","shifts","stylesArray","shiftStyle","push","useEffect","window","shiftID","generate","timeDivElement","createNewShift","cleanEventListerners","map","idx","key","DayBlockContainer","WeekBlockContainer","AvailabilityContainer","Day","SubmitShiftsButton","Button","ShiftDayBlock","useRef","findTimeIndex","timesArray","index","timeArray","availabilities","times","timesArr","weekDate","data-day","data-time","ref","el","SubmittedContext","Availability","date","Date","weekStartDay","getDate","getDay","submitted","setSubmitted","setShifts","postData","flat","handleCreateShift","newShifts","newShift","handleDeleteShift","newShiftArray","splice","updatedShifts","dayShifts","shiftIndex","findIndex","updatedShift","shiftObject","initializeShifts","useMemo","computeTimeArray","start","end","onClick","zIndex","backgroundColor","overflow","borderRadius","position","cursor","boxShadow","opacity","onMouseUp","AvailabilityDayBlock","getTimeIndexFromMousePosition","startMousePositionY","start_timeIndex","mouseDown","timeInterval","sTime","split","parseInt","eTime","minutesPerBlock","blocksPerHour","numberOfBlocks","addHours","addMinutes","hourTime","minuteTime","Sider","Layout","Content","Shifts","employeeList","setEmployeeList","ViewEmployeeAvailabilities","setViewEmployeeAvailabilities","setEmployee","initializeEmployeeList","findEmployeeAvailabilitiesOrShifts","shiftOrAvailability","Object","keys","item","selectedEmployeeAvailabilities","keyPath","selectedKeys","domEvent","employeeAvailabilities","availability","selectedEmployeeShifts","employeeShifts","theme","mode","Item","name","ShiftBlock","divColor","selected","ScheduleShiftBlock","handleOnClick","staff_id","StyledButton","ScheduleDayBlock","EmployeeName","ListOfEmployees","StyledLayout","Schedule","colorArray","getEmployeeList","selectEmployeeShifts","employeeID","newEmployeeList","colorIndex","initialShifts","j","week_shifts","Profile","userData","setUserData","getUserData","email","ConfirmedEmployee","PendingDiv","DeleteButton","PendingEmployee","display","delete","MyStyledSider","MyStyledContent","AddEmployees","pendingEmployees","setPendingEmployees","confirmedEmployees","setConfirmedEmployees","initializeEmployees","deleteEmployee","confEmployees","confirmed","pendEmployees","pending","onFinish","label","rules","required","message","type","htmlType","Manager","match","useRouteMatch","url","clear","path","ShiftBlockTemplate","DayTemplate","WeekTemplate","Employee","FormContainer","Background","LoginUser","password","controller","signal","RegisterUser","values","store","location","ResetPasswordAPI","jToken","resetData","jwt","layout","labelCol","sm","span","lg","xl","xxl","wrapperCol","tailLayout","offset","RegisterTemplate","success","setSuccess","redirect","initialValues","remember","onFinishFailed","errorInfo","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","RegisterManager","Landingnav","LoginPage","isAuth","setEmailPassword","abortController","AbortController","manager","ResetPassword","useParams","PrivateRoute","canAccessThisPage","Pages","checkLoggedIn","token","callAuth","abort","App","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"mTAGMA,EAAcC,IAAMC,cAAc,CAAE,OAAmD,OAAzCC,aAAaC,QAAQ,gBAAyC,SAAW,IACvHC,EAAoBJ,IAAMC,eAAc,SAACI,GAC3CC,QAAQC,IAAR,4BAAiCC,KAAKC,UAAUJ,QAG7C,SAASK,IAEZ,OAAOC,qBAAWZ,GAGf,SAASa,IAEZ,OAAOD,qBAAWP,GAIf,IAAMS,EAAe,SAACC,GAAW,IAAD,EACXC,mBAAS,CAAE,QAAU,EAAO,SAAW,IAD5B,mBAC5BC,EAD4B,KACtBC,EADsB,KAMnC,OAEI,kBAAClB,EAAYmB,SAAb,CAAsBb,MAAOW,GACzB,kBAACZ,EAAkBc,SAAnB,CAA4Bb,MAPpC,SAAoBA,GAChBY,EAAQZ,KAOCS,EAAMK,Y,wBC5BVC,EAAW,wB,kLCIjB,IAAMC,EAAYC,IAAOC,OAAV,KCqBPC,EAnBI,WAEf,OADAlB,QAAQC,IAAI,SAER,6BACI,wBAAIkB,UAAW,YACX,wBAAIC,GAAI,SAAUC,MAAO,CAAEC,YAAa,SACpC,kBAAC,IAAD,CAAMC,GAAG,KAAI,kBAACR,EAAD,CAAWS,MAAM,WAAjB,UAEjB,4BACI,kBAAC,IAAD,CAAMD,GAAG,cAAa,kBAACR,EAAD,mBAE1B,4BACI,kBAAC,IAAD,CAAMQ,GAAG,WAAU,kBAACR,EAAD,mBCLxBU,EAZF,WAET,OACI,6BACI,kBAAC,EAAD,MACA,sC,QCJL,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,yBAAAC,EAAA,sEAC0CC,IAD1C,mBACKC,EADL,EACKA,YAAaC,EADlB,EACkBA,cACrB/B,QAAQC,IAAIL,aAAaC,QAAQ,gBACjCG,QAAQC,IAAR,0BAAiD,MAAlB8B,EAA/B,aAAyDA,IACnC,MAAlBA,EAJD,kCAKwBC,MAAM,GAAD,OAAIlB,EAAJ,gBAAoBa,EAApB,KAAiC,CACzDM,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtC,aAAaC,QAAQ,iBAEjDsC,YAAa,YAZlB,eAKOC,EALP,iBAcoBA,EAASC,OAd7B,eAcOC,EAdP,iBAesBF,EAASG,OAf/B,eAeOA,EAfP,OAgBCvC,QAAQC,IAAR,qCAA0CC,KAAKC,UAAUmC,KAhB1D,kBAiBQ,CAAE,KAAQA,EAAM,OAAUC,IAjBlC,iCAoBQ,CAAE,KAAQT,EAAa,OAAUC,IApBzC,6C,sBAwBA,SAAeS,EAAtB,oC,4CAAO,WAA+BC,EAAOd,GAAtC,yBAAAC,EAAA,sEAC0CC,IAD1C,mBACKC,EADL,EACKA,YACc,OADDC,EADlB,EACkBA,eADlB,iCAGwBC,MAAM,GAAD,OAAIlB,EAAJ,gBAAoBa,EAApB,KAAiC,CACzDM,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtC,aAAaC,QAAQ,iBAEjD6C,KAAMxC,KAAKC,UAAUsC,GACrBN,YAAa,YAXlB,cAGOC,EAHP,iBAaoBA,EAASC,OAb7B,eAaOC,EAbP,iBAcsBF,EAASG,OAd/B,eAcOA,EAdP,OAeCvC,QAAQC,IAAR,+BAAoCC,KAAKC,UAAUmC,KAfpD,kBAgBQ,CAAE,KAAQA,EAAM,OAAUC,IAhBlC,iCAmBQ,CAAE,KAAQT,EAAa,OAAUC,IAnBzC,6C,sBAsBA,SAAeY,EAAtB,oC,4CAAO,WAAiCC,EAAIjB,GAArC,yBAAAC,EAAA,sEAC0CC,IAD1C,mBACKC,EADL,EACKA,YACc,OADDC,EADlB,EACkBA,eADlB,wBAGC/B,QAAQC,IAAR,qBAA0B2C,IAH3B,SAIwBZ,MAAM,GAAD,OAAIlB,EAAJ,gBAAoBa,EAApB,YAAgCiB,GAAM,CAC9DX,OAAQ,SACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtC,aAAaC,QAAQ,iBAGjDsC,YAAa,YAZlB,cAIOC,EAJP,iBAcoBA,EAASC,OAd7B,eAcOC,EAdP,iBAesBF,EAASG,OAf/B,eAeOA,EAfP,OAgBCvC,QAAQC,IAAR,+BAAoCC,KAAKC,UAAUmC,KAhBpD,kBAiBQ,CAAE,KAAQA,EAAM,OAAUC,IAjBlC,iCAoBQ,CAAE,KAAQT,EAAa,OAAUC,IApBzC,6C,sBAyBA,SAAeF,IAAtB,+B,4CAAO,kCAAAD,EAAA,6DACGiB,EAAU,CACZ,QAAWjD,aAAaC,QAAQ,iBAFjC,SAIoBmC,MAAM,GAAD,OAAIlB,EAAJ,mBAA+B,CACvDmB,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEdQ,KAAMxC,KAAKC,UAAU0C,KAVtB,cAIGT,EAJH,gBAagBA,EAASC,OAbzB,cAaGC,EAbH,gBAckBF,EAASG,OAd3B,cAcGA,EAdH,OAgBH3C,aAAakD,QAAQ,cAAeR,EAAKS,QACzCnD,aAAakD,QAAQ,eAAgBR,EAAKO,SAC1C7C,QAAQC,IAAR,kBAAuBsC,EAAvB,mBAAmD,MAAXA,IAlBrC,kBAoBI,CAAE,YAAeD,EAAM,cAAiBC,IApB5C,6C,ieCxEA,IAAMS,EAAehC,IAAOiC,IAAV,KCYVC,GDNelC,IAAOiC,IAAV,KAOhB,SAAAzC,GAAK,OAAIA,EAAM2C,WAAa,MACzB,SAAA3C,GAAK,OAAIA,EAAM4C,cAAgB,MACjC,SAAA5C,GAAK,OAAIA,EAAM6C,YAAc,MAC5B,SAAA7C,GAAK,OAAIA,EAAM8C,aAAe,MAClB,SAAA9C,GAAK,OAAIA,EAAM+C,YAAc,UAAY,aAChD,SAAA/C,GAAK,OAAIA,EAAM+C,YAAc,UAAY,MCjBzC,SAAC/C,GAGf,OACI,yBAAKW,UAAU,cACVX,EAAMgD,Q,wSCLnB,IAAMC,EAAoBzC,IAAOiC,IAAV,KAKhB,SAAAzC,GAAK,OAAIA,EAAMkD,UACd,SAAAlD,GAAK,OAAIA,EAAMmD,WACb,SAAAnD,GAAK,OAAIA,EAAMoD,aACjB,SAAApD,GAAK,OAAIA,EAAMqD,YACb,SAAArD,GAAK,OAAIA,EAAMsD,kBAsFVC,EA/EY,SAACvD,GAAW,IAAD,EAGIC,mBAAS,QAHb,mBAG3BuD,EAH2B,KAGdC,EAHc,KA2ClC,IAAIC,EAAU,GAYd,MAX8B,qBAAlB1D,EAAM2D,SACdD,EAAU,CACNE,IAAI,GAAD,OAAK5D,EAAM2D,OAAOC,IAAlB,MACHC,OAAO,GAAD,OAAK7D,EAAM2D,OAAOE,OAAlB,MACNC,KAAK,GAAD,OAAK9D,EAAM2D,OAAOG,KAAlB,MACJC,MAAM,GAAD,OAAK/D,EAAM2D,OAAOI,MAAlB,QAOT,6BACI,kBAAC,EAAD,CACIC,YArDZ,SAAqBC,GACjB,IACIC,EAAiBD,EAAME,QAEvBC,EAAWH,EAAMI,OAAOC,wBACxBC,EAAYH,EAASR,IACrBY,EAAeJ,EAASK,OAGxBP,EAAiBK,EARJ,IAQ8BL,EAAiBM,EAR/C,GAUO,aAAhBhB,GACAC,EAAe,YAKC,SAAhBD,GACAC,EAAe,SAoCfiB,YA5BZ,SAA2BT,GACvB,GAAoB,aAAhBT,EAA4B,CAC5B,IAAIU,EAAiBD,EAAME,QAC3BnE,EAAM2E,gBAAgBT,EAAgBlE,EAAM8B,UAE3C,CACD,IAAIoC,EAAiBD,EAAME,QAC3BV,EAAe,YACfzD,EAAM4E,UAAUV,EAAgBlE,EAAM8B,QAqBlC+C,cAjCZ,WACI7E,EAAM8E,YAAY9E,EAAM8B,KAAKiD,IAAK/E,EAAM8B,KAAKlB,KAiCrCwC,UAAWM,EAAQG,OACnBX,OAAQQ,EAAQE,IAChBT,QAASO,EAAQI,KACjBT,SAAUK,EAAQK,MAClBT,eAAgBE,GAIhB,2BAAIxD,EAAM8B,KAAKkD,WAAf,MAA8BhF,EAAM8B,KAAKmD,a,+TCnFzD,IAAMhC,EAAoBzC,IAAOiC,IAAV,KAKhB,SAAAzC,GAAK,OAAIA,EAAMkD,UACd,SAAAlD,GAAK,OAAIA,EAAMmD,WACb,SAAAnD,GAAK,OAAIA,EAAMoD,aACjB,SAAApD,GAAK,OAAIA,EAAMqD,YAsQR6B,EA3PmB,SAAClF,GAC/B,IAAImF,EAAUC,EAAQ,IADmB,MAMVnF,oBAAS,GANC,mBAOnCoF,GAPmC,UAOnBrF,EAAMsF,SAASC,SAPI,GAQtBvF,EAAMwF,SACQvF,mBAAS,KATD,mBASlCwF,EATkC,KASrBC,EATqB,KAUrChC,EAAU,GAmCd,SAASiC,EAAgBzB,EAAgB0B,EAAWhF,GAChD,IACIiF,EAAgBC,EADI5B,GAExB,GAAI2B,GAAiB,EAAG,CACpB,IACIE,EADcV,EAAcQ,GACDG,QAAQhD,KACnC+C,EAAeH,EACf5F,EAAMiG,YAAYL,EAAWG,EAAcnF,EAAIZ,EAAM8B,KAAKiD,KAG1D/E,EAAMiG,YAAYF,EAAcH,EAAWhF,EAAIZ,EAAM8B,KAAKiD,MAMtE,SAASe,EAAiC5B,GAStC,IARA,IAAIgC,GAAa,EAEbC,EAAgBnG,EAAM8B,KAAKkD,WAC3BoB,EAAmBpG,EAAM8B,KAAKmD,SAE9BoB,EAAiBC,EAAkBH,GACnCI,EAAoBD,EAAkBF,GAEjCI,EAAI,EAAGA,EAAInB,EAAcoB,OAAQD,IAAK,CAEvCtC,EADwBmB,EAAcmB,GAAGlC,wBAAwBV,KACtB4C,GAAKD,GAAqBC,GAAKH,IAC1EH,EAAYM,GAMpB,OAAON,EAUX,SAASI,EAAkBtD,GACvB,IAAK,IAAIwD,EAAI,EAAGA,EAAInB,EAAcoB,OAAQD,IACtC,GAAInB,EAAcmB,GAAGR,QAAQhD,OAASA,EAClC,OAAOwD,EAGf,OAAQ,EAGZ,SAAS7B,EAAgB+B,EAAeC,GACpC,IAEIT,EAAYJ,EAFKY,GAGjBE,EAAoBvB,EAAca,GAAWF,QAAQhD,KAErD4C,EAAYe,EAAU3B,WAM1B,SAAS6B,EAAoB5C,GAEzB0B,EADqB1B,EAAME,QACKyB,EAAWe,EAAU/F,IANrDgG,IAAsBD,EAAU3B,aAChCY,EAAYe,EAAU1B,UAW1B6B,SAASC,iBAAiB,YAAaF,GACvCC,SAASC,iBAAiB,WAL1B,SAASC,IACLF,SAASG,oBAAoB,UAAWD,GACxCF,SAASG,oBAAoB,YAAaJ,MAMlD,SAASjC,EAAUV,EAAgByC,GAG/B,IACIO,EAAepB,EADQ5B,GAG3B,SAASiD,EAAmBlD,GACxB,IAGImD,EAFWtB,EADS7B,EAAME,SAGJ+C,EAEtBG,EAAaf,EAAkBK,EAAU3B,YACzCsC,EAAWhB,EAAkBK,EAAU1B,UAEvCsC,EAAkBvH,EAAM8B,KAAKkD,WAC7BwC,EAAgBxH,EAAM8B,KAAKmD,SAE3BwC,EAAmBnB,EAAkBiB,GACrCG,EAAiBpB,EAAkBkB,GAEnCG,EAAgBN,EAAaD,EAC7BQ,EAAcN,EAAWF,EAC7B,GAAIO,GAAiBF,GAAoBG,GAAeF,EAAgB,CACpE,IAAIG,EAAexC,EAAcsC,GAAe3B,QAAQhD,KACpD8E,EAAazC,EAAcuC,GAAa5B,QAAQhD,KACpDhD,EAAMiG,YAAY4B,EAAcC,EAAYnB,EAAU/F,GAAI+F,EAAU5B,KACpEgD,KASRjB,SAASC,iBAAiB,YAAaI,GACvCL,SAASC,iBAAiB,WAN1B,SAASiB,IACLlB,SAASG,oBAAoB,UAAWe,GACxClB,SAASG,oBAAoB,YAAaE,MASlD,SAASc,EAAoBC,GACzB,IAAIC,EAAYD,EAAMlD,WAClBoD,EAAUF,EAAMjD,SAChBoC,EAAaf,EAAkB6B,GAC/Bb,EAAWhB,EAAkB8B,GAGjC,GAAIf,EAAa,GAAKC,EAAW,EAE7B,OADA9H,QAAQC,IAAR,cAAmBO,EAAMY,GAAzB,mDACO,GAGP,IACIyH,EAAsBhD,EAAcgC,GACpCiB,EAAoBjD,EAAciC,GAClCiB,EAAgBF,EAAoBG,UAOxC,MAFkB,CAACD,EAJDD,EAAkBE,UAAYF,EAAkBG,aAGvCF,EAFhBF,EAAoBK,WACnBL,EAAoBM,aAQxC,SAASZ,IACL,IAAItC,EAAc,GAClB,GAAIzF,EAAM4I,OAAOnC,OAAS,EACtB,IAAK,IAAID,EAAI,EAAGA,EAAIxG,EAAM4I,OAAOnC,OAAQD,IAAK,CAC1C,IAAMqC,EAAcZ,EAAoBjI,EAAM4I,OAAOpC,IACjD5C,EAAMiF,EAAY,GAIlBC,EAAa,CACbjF,OAJSgF,EAAY,GAKrBjF,IAAKA,EACLE,KALO+E,EAAY,GAMnB9E,MALQ8E,EAAY,IAOxBpD,EAAYsD,KAAKD,GAGzBpD,EAAUD,GAWd,MAhN8B,qBAAlBzF,EAAM2D,SACdD,EAAU,CACNE,IAAI,GAAD,OAAK5D,EAAM2D,OAAOC,IAAlB,MACHC,OAAO,GAAD,OAAK7D,EAAM2D,OAAOE,OAAlB,MACNC,KAAK,GAAD,OAAK9D,EAAM2D,OAAOG,KAAlB,MACJC,MAAM,GAAD,OAAK/D,EAAM2D,OAAOI,MAAlB,QAmMbiF,qBAAU,WAGN,OAFAjB,IACAkB,OAAOlC,iBAAiB,SAAUgB,GAC1B,WACJkB,OAAOhC,oBAAoB,SAAUc,MAE1C,CAAC/H,EAAM4I,SAGN,6BACI,kBAAC,EAAD,CACIxF,UAAWM,EAAQG,OACnBX,OAAQQ,EAAQE,IAChBT,QAASO,EAAQI,KACjBT,SAAUK,EAAQK,MAClBW,YA7MZ,SAAyBT,GACrB,IAAMiF,EAnBC/D,EAAQgE,WAoBXjF,EAAiBD,EAAME,QACvBiF,EAAiB/D,EAAcS,EAAiC5B,IACpE,IAAwB,IAApBkF,EAAuB,CAMvB,SAASvC,EAAoB5C,GAEzB0B,EADqB1B,EAAME,QACKnB,EAAMkG,GAG1C,IAAIlG,EAAOoG,EAAepD,QAAQhD,KAClChD,EAAMqJ,eAAerG,EAAMA,EAAMkG,EAASlJ,EAAM8B,KAAKiD,KACrDgD,IACAjB,SAASC,iBAAiB,YAAaF,GACvCC,SAASC,iBAAiB,WAb1B,SAASuC,IACLxC,SAASG,oBAAoB,UAAWqC,GACxCxC,SAASG,oBAAoB,YAAaJ,SAuM1C,2BAAI7G,EAAM8B,KAAKkD,WAAf,MAA8BhF,EAAM8B,KAAKmD,WAKzCjF,EAAM4I,OAAOW,KAAI,SAACzH,EAAM0H,GACpB,OACI,kBAAC,EAAD,CACIC,IAAKD,EACL1H,KAAMA,EACN6B,OAAQ8B,EAAY+D,GACpB5E,UAAWA,EACXD,gBAAiBA,EACjBG,YAAa9E,EAAM8E,mB,oyBCtQxC,IAAM4E,EAAoBlJ,IAAOiC,IAAV,KASjBkH,EAAqBnJ,IAAOiC,IAAV,KASlBmH,EAAwBpJ,IAAOiC,IAAV,KAKrBoH,EAAMrJ,IAAOiC,IAAV,KAMHqH,EAAqBtJ,YAAOuJ,IAAPvJ,CAAH,KCgIhBwJ,GA1JO,SAAChK,GAMLoF,EAAQ,IAKtB,IAAMC,EAAgB4E,iBAAO,IAXA,EAYDhK,mBAAS,IAZR,mBAYtB0D,EAZsB,KAYd+B,EAZc,KA8B7B,SAASwE,EAAclH,EAAMmH,GAGzB,IADA,IAAIC,GAAS,EACJ5D,EAAI,EAAGA,EAAI2D,EAAW1D,OAAQD,IAC/B2D,EAAW3D,KAAOxD,IAClBoH,EAAQ5D,GAIhB,OAAO4D,EAGX,SAASnC,EAAoBC,EAAOmC,GAChC,IAAIhD,GAAc,EACdC,GAAY,EAQhB,GANIY,EAAMnD,MAAQ/E,EAAMY,KACpByG,EAAa6C,EAAchC,EAAMlD,WAAYqF,GAC7C/C,EAAW4C,EAAchC,EAAMjD,SAAUoF,IAIzChD,EAAa,GAAKC,EAAW,EAE7B,OADA9H,QAAQC,IAAR,cAAmBO,EAAMY,GAAzB,mDACO,GAGP,IACIyH,EAAsBhD,EAAcE,QAAQ8B,GAC5CiB,EAAoBjD,EAAcE,QAAQ+B,GAC1CiB,EAAgBF,EAAoBG,UAQxC,MAHkB,CAACD,EAJDD,EAAkBE,UAAYF,EAAkBG,aAGvCF,EAFhBF,EAAoBK,WACnBL,EAAoBM,aASxC,SAASZ,IACL,IAAItC,EAAc,GAClB,GAAIzF,EAAMsK,eAAe7D,OAAS,EAC9B,IAAK,IAAID,EAAI,EAAGA,EAAIxG,EAAMsK,eAAe7D,OAAQD,IAAK,CAClD,IAAMqC,EAAcZ,EAAoBjI,EAAMsK,eAAe9D,GAAI+D,GAC7D3G,EAAMiF,EAAY,GAIlBC,EAAa,CACbjF,OAJSgF,EAAY,GAKrBjF,IAAKA,EACLE,KALO+E,EAAY,GAMnB9E,MALQ8E,EAAY,IAOxBpD,EAAYsD,KAAKD,GAGzBpD,EAAUD,GAId,IAAM8E,EAAQvK,EAAMwK,SAWpB,OATAxB,qBAAU,WAGN,OAFAjB,IACAkB,OAAOlC,iBAAiB,SAAUgB,GAC1B,WACJkB,OAAOhC,oBAAoB,SAAUc,MAE1C,CAAC/H,EAAMsK,iBAKN,yBAAK3J,UAAU,aACX,kBAACkJ,EAAD,KAAK,2BAAI7J,EAAM+E,IAAV,KAAgB,gCAAS/E,EAAMyK,YAEhCF,EAAMhB,KAAI,SAACzH,EAAM0H,GACb,OACI,yBAAKC,IAAKD,EAAKkB,WAAU1K,EAAM+E,IAAK4F,YAAW7I,EAAM8I,IAAK,SAAAC,GAAQxF,EAAcE,QAAQiE,GAAOqB,IAE3F,kBAAC,EAAD,CAEIjK,GAAI4I,EAEJxG,KAAMlB,QAUtB9B,EAAMsK,eAAef,KAAI,SAACzH,EAAM0H,GAC5B,OACI,kBAAC,EAAD,CACIhE,SAAUxF,EAAMwF,SAChBoD,OAAQ5I,EAAM4I,OACda,IAAKD,EACL1H,KAAMA,EACN6B,OAAQA,EAAO6F,GACflE,SAAUD,EACVgE,eAAgBrJ,EAAMqJ,eACtBpD,YAAajG,EAAMiG,YACnBnB,YAAa9E,EAAM8E,mB,oBCjIlCgG,GAAmB5L,IAAMC,eAAc,GAyJrC4L,GAvJM,WACjB/B,qBAAU,WACNxJ,QAAQC,IAAR,yBAA8BL,aAAaC,QAAQ,mBACpD,IACH,IAAI2L,EAAO,IAAIC,KACXC,EAAeF,EAAKG,UAAYH,EAAKI,SAAW,EAL7B,EAYWnL,oBAAS,GAZpB,mBAYhBoL,EAZgB,KAYLC,EAZK,OAaKrL,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAbvC,mBAahB2I,EAbgB,KAaR2C,EAbQ,OAcGtL,mBAAS,CAC/B,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,UAAW,MAAS,QAAS,IAAO,QAAS,GAAM,GAC5D,CAAE,IAAO,YAAa,MAAS,QAAS,IAAO,QAAS,GAAM,GAC9D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,GAC7D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,KArB1C,mBAchBsK,EAdgB,sDA4BvB,kCAAAnJ,EAAA,6DACUoK,EAAW5C,EAAO6C,OACxBjM,QAAQC,IAAR,wBAA6BC,KAAKC,UAAU6L,KAFhD,SAGmCxJ,EAAgBwJ,EAAU,gBAH7D,gBAGY1J,EAHZ,EAGYA,KACO,OADDC,EAHlB,EAGkBA,QAGVuJ,GAAa,GAIb9L,QAAQC,IAAR,wBAA6BsC,IAEjCvC,QAAQC,IAAR,oBAAyBC,KAAKC,UAAUmC,GAAxC,0BAA+DC,IAZnE,4CA5BuB,sBA8DvB,SAAS2J,EAAkB3G,EAAKC,EAAYC,EAAUrE,GAElDpB,QAAQC,IAAR,gBAAsBmJ,EAAtB,MAEA,IADA,IAAI+C,EAAS,YAAO/C,GACXpC,EAAI,EAAGA,EAAImF,EAAUlF,OAAQD,IAClCmF,EAAUnF,GAAKoC,EAAOpC,GAE1B,IAAIoF,EAAW,CAAE,IAAO7G,EAAK,WAAcC,EAAY,SAAYC,EAAU,GAAMrE,GACnF+K,EAAU5G,GAAKgE,KAAK6C,GAEpBL,EAAUI,GACVL,GAAa,GAEjB,SAASO,EAAkB9G,EAAKnE,GAG5B,IAFA,IAAIkL,EAAa,YAAOlD,GAEfpC,EAAI,EAAGA,EAAIsF,EAAcrF,OAAQD,IACtCsF,EAActF,GAAd,YAAuBoC,EAAOpC,IAGlC,IAAK,IAAIA,EAAI,EAAGA,EAAIsF,EAAc/G,GAAK0B,OAAQD,IACvCsF,EAAc/G,GAAKyB,GAAG5F,KAAOA,GAC7BkL,EAAc/G,GAAKgH,OAAOvF,EAAG,GAGrC+E,EAAUO,GACVR,GAAa,GAEjB,SAASrF,EAAYlB,EAAKnE,EAAIoE,EAAYC,GACtC,IAAM+G,EAAa,YAAOpD,GAC1BpJ,QAAQC,IAAR,sBAA2BuM,IAC3B,IAAIC,EAAYD,EAAcjH,GAE1BmH,EAAaD,EAAUE,WAAU,SAAAjE,GAAK,OAAIA,EAAMtH,KAAOA,KACvDwL,EAAe,CAAE,IAAOrH,EAAK,WAAcC,EAAY,SAAYC,EAAU,GAAMrE,GACvFqL,EAAUC,GAAcE,EACxBb,EAAUS,GACVV,GAAa,GAzDjBtC,qBAAU,WAAM,4CACZ,sCAAA5H,EAAA,sEACiCF,EAAc,gBAD/C,OAEI,GAFJ,SACUY,EADV,EACUA,KACS,MAFnB,EACgBC,OACQ,CAGhB,IAFI+J,EADY,YACQlD,GAEfpC,EAAI,EAAGA,EAAIsF,EAAcrF,OAAQD,IACtCsF,EAActF,GAAd,YAAuBoC,EAAOpC,IAGlC,IAASA,EAAI,EAAGA,EAAI1E,EAAK2E,OAAQD,IACzB6F,EAAcvK,EAAK0E,GACvBsF,EAAcO,EAAYtH,KAAKgE,KAAKsD,GAExCd,EAAUO,GAblB,4CADY,uBAAC,WAAD,wBAiBZQ,KACD,IA0CH,IAAMnC,EAAaoC,mBAAQ,WACvB,OAAOC,GAAiBjC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,IA7E/B,MA8EnB,CAACnC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,MAC7B,OACI,6BACI,kBAAC9C,EAAD,KAcI,kBAACkB,GAAiB1K,SAAlB,CAA2Bb,MAAO8L,GAC9B,kBAAC1B,EAAD,KACKY,EAAMhB,KAAI,SAACzH,EAAM0H,GACd,OACI,kBAACE,EAAD,CAAmB1I,MAAM,UAAUyI,IAAKD,GACpC,kBAAC,GAAD,CACIiB,SAAUS,EAAe1B,EACzBzE,IAAKjD,EAAKiD,IACV0H,MAAO3K,EAAK2K,MACZC,IAAK5K,EAAK4K,IACV9L,GAAIkB,EAAKlB,GACTgI,OAAQA,EAAOY,GACfgB,SAAUL,EACVuB,kBAAmBA,EACnBzF,YAAaA,EACb4F,kBAAmBA,WAS/C,kBAAC/B,EAAD,CAAoB6C,QAjJL,4CAiJf,YCrEG1J,GA3FW,SAACjD,GAAW,IAAD,EACKC,mBAAS,QADd,mBAC1BuD,EAD0B,KACbC,EADa,OAEGxD,oBAAS,GAFZ,gCAGCA,oBAAS,IAHV,mBAI3BoL,GAJ2B,UAIfxL,qBAAWiL,KAC7BtL,QAAQC,IAAR,6BAAkC4L,IAClC,IAAI3H,EAAU,CACVG,OAAQ,EACR+I,OAAQ,GACRC,gBAAiB,SACjBC,SAAU,SACVC,aAAc,QAkElB,MA/D8B,qBAAlB/M,EAAM2D,SACdD,EAAU,CACNsJ,SAAU,WACVpJ,IAAI,GAAD,OAAK5D,EAAM2D,OAAOC,IAAlB,MACHC,OAAO,GAAD,OAAK7D,EAAM2D,OAAOE,OAAlB,MACNC,KAAK,GAAD,OAAK9D,EAAM2D,OAAOG,KAAlB,MACJC,MAAM,GAAD,OAAK/D,EAAM2D,OAAOI,MAAlB,MACL6I,OAAQ,EACRC,gBAAiB,UACjBI,OAAQzJ,EACRuJ,aAAc,MACdG,UAAW7B,EAAY,GAAK,UAC5B8B,QAAS,QAoDb,yBACInJ,YA1CR,SAAqBC,GACjB,IACIC,EAAiBD,EAAME,QAEvBC,EAAWH,EAAMI,OAAOC,wBACxBC,EAAYH,EAASR,IACrBY,EAAeJ,EAASK,OAGxBP,EAAiBK,EARJ,IAQ8BL,EAAiBM,EAR/C,GAUO,aAAhBhB,GACAC,EAAe,YAKC,SAAhBD,GACAC,EAAe,SAyBnBiB,YApBR,SAA2BT,GACvB,GAAoB,aAAhBT,EAA4B,CAC5B,IAAIU,EAAiBD,EAAME,QAC3BnE,EAAM2E,gBAAgBT,EAAgBlE,EAAM8B,UAE3C,CACD,IAAIoC,EAAiBD,EAAME,QAC3BV,EAAe,YACfzD,EAAM4E,UAAUV,EAAgBlE,EAAM8B,QAatCsL,UAVR,WACwB,aAAhB5J,GACAC,EAAe,SASf5C,MAAO6C,EACP/C,UAAU,cACVkE,cArDR,WACI7E,EAAM6L,kBAAkB7L,EAAM8B,KAAKiD,IAAK/E,EAAM8B,KAAKlB,MAqD/C,2BAAIZ,EAAM8B,KAAKkD,WAAf,MAA8BhF,EAAM8B,KAAKmD,YC2JtCoI,GA3Oc,SAACrN,GAE1B,IAAImF,EAAUC,EAAQ,IAMtB,IAAMC,EAAgB4E,iBAAO,IARO,EASRhK,mBAAS,IATD,mBAS7B0D,EAT6B,KASrB+B,EATqB,KAoCpC,SAASC,EAAgBzB,EAAgB0B,EAAWhF,GAChD,IACIiF,EAAgByH,EADIpJ,GAExB,GAAI2B,GAAiB,EAAG,CACpB,IAAIE,EAAewE,EAAM1E,GACrBE,EAAeH,EACf5F,EAAMiG,YAAYjG,EAAMY,GAAIA,EAAIgF,EAAWG,GAG3C/F,EAAMiG,YAAYjG,EAAMY,GAAIA,EAAImF,EAAcH,GAElDmC,KAGR,SAASuF,EAA8BpJ,GAGnC,IAFA,IAAIgC,GAAa,EAERM,EAAI,EAAGA,EAAInB,EAAcE,QAAQkB,OAAQD,IAAK,CAG/CtC,EAFwBmB,EAAcE,QAAQiB,GAAGlC,wBAAwBV,MAGzEsC,EAAYM,GAGpB,OAAON,EAKX,SAASgE,EAAclH,EAAMmH,GAGzB,IADA,IAAIC,GAAS,EACJ5D,EAAI,EAAGA,EAAI2D,EAAW1D,OAAQD,IAC/B2D,EAAW3D,KAAOxD,IAClBoH,EAAQ5D,GAIhB,OAAO4D,EAIX,SAASzF,EAAgB+B,EAAeC,GACpC,IAEIT,EAAYoH,EAFK5G,GAGjBE,EAAoB2D,EAAMrE,GAE1BN,EAAYe,EAAU3B,WAM1B,SAAS6B,EAAoB5C,GAEzB0B,EADqB1B,EAAME,QACKyB,EAAWe,EAAU/F,IANrDgG,IAAsBD,EAAU3B,aAChCY,EAAYe,EAAU1B,UAW1B6B,SAASC,iBAAiB,YAAaF,GACvCC,SAASC,iBAAiB,WAL1B,SAASC,IACLF,SAASG,oBAAoB,UAAWD,GACxCF,SAASG,oBAAoB,YAAaJ,MAMlD,SAASjC,EAAUV,EAAgByC,GAG/B,IACIO,EAAeoG,EADQpJ,GAG3B,SAASiD,EAAmBlD,GACxB,IAGImD,EAFWkG,EADSrJ,EAAME,SAGJ+C,EAKtBS,EAHauC,EAAcvD,EAAU3B,WAAYuF,GAGpBnD,EAC7BQ,EAHWsC,EAAcvD,EAAU1B,SAAUsF,GAGpBnD,EACzBO,GAAiB,GAAKC,GAAe2C,EAAM9D,OAAS,IACpDzG,EAAMiG,YAAYjG,EAAMY,GAAI+F,EAAU/F,GAAI2J,EAAM5C,GAAgB4C,EAAM3C,IACtEG,KASRjB,SAASC,iBAAiB,YAAaI,GACvCL,SAASC,iBAAiB,WAN1B,SAASiB,IACLlB,SAASG,oBAAoB,UAAWe,GACxClB,SAASG,oBAAoB,YAAaE,MAOlD,SAASc,EAAoBC,EAAOmC,GAChC,IAAIhD,GAAc,EACdC,GAAY,EAQhB,GANIY,EAAMnD,MAAQ/E,EAAMY,KACpByG,EAAa6C,EAAchC,EAAMlD,WAAYqF,GAC7C/C,EAAW4C,EAAchC,EAAMjD,SAAUoF,IAIzChD,EAAa,GAAKC,EAAW,EAE7B,OADA9H,QAAQC,IAAR,cAAmBO,EAAMY,GAAzB,mDACO,GAGP,IACIyH,EAAsBhD,EAAcE,QAAQ8B,GAC5CiB,EAAoBjD,EAAcE,QAAQ+B,GAC1CiB,EAAgBF,EAAoBG,UAQxC,MAHkB,CAACD,EAJDD,EAAkBE,UAAYF,EAAkBG,aAGvCF,EAFhBF,EAAoBK,WACnBL,EAAoBM,aASxC,SAASZ,IACL,IAAItC,EAAc,GAClB,GAAIzF,EAAM4I,OAAOnC,OAAS,EACtB,IAAK,IAAID,EAAI,EAAGA,EAAIxG,EAAM4I,OAAOnC,OAAQD,IAAK,CAC1C,IAAMqC,EAAcZ,EAAoBjI,EAAM4I,OAAOpC,GAAI+D,GACrD3G,EAAMiF,EAAY,GAIlBC,EAAa,CACbjF,OAJSgF,EAAY,GAKrBjF,IAAKA,EACLE,KALO+E,EAAY,GAMnB9E,MALQ8E,EAAY,IAOxBpD,EAAYsD,KAAKD,GAGzBpD,EAAUD,GAId,IAAM8E,EAAQvK,EAAMwK,SAYpB,OAVAxB,qBAAU,WAIN,OAHAjB,EAAqB/H,EAAM4I,QAC3BK,OAAOlC,iBAAiB,SAAUgB,GAClCvI,QAAQC,IAAR,QACQ,WACJwJ,OAAOhC,oBAAoB,SAAUc,MAE1C,CAAC/H,EAAM4I,SAIN,yBAAKlE,YA5LT,SAAsCT,GAElC,IAAIsJ,EAAsBtJ,EAAME,QAC1B+E,EATC/D,EAAQgE,WAWXqE,EAAkBF,EAA8BC,GACpD,GAA+B,eAA3BtJ,EAAMI,OAAO1D,UACbnB,QAAQC,IAAI,kCAEX,CAKD,SAASoH,EAAoB5C,GAEzB0B,EADqB1B,EAAME,QACKoG,EAAMiD,GAAkBtE,GAE5DlJ,EAAM0L,kBAAkB1L,EAAMY,GAAI2J,EAAMiD,GAAkBjD,EAAMiD,GAAkBtE,GAClFnB,IACAjB,SAASC,iBAAiB,YAAaF,GACvCC,SAASC,iBAAiB,WAX1B,SAASuC,IACLxC,SAASG,oBAAoB,UAAWqC,GACxCxC,SAASG,oBAAoB,YAAaJ,QAgLFlG,UAAU,aACtD,kBAACkJ,EAAD,KAAK,2BAAI7J,EAAM+E,IAAV,KAAgB,gCAAS/E,EAAMyK,YACnCF,EAAMhB,KAAI,SAACzH,EAAM0H,GACd,OACI,yBAAKC,IAAKD,EAAKkB,WAAU1K,EAAM+E,IAAK4F,YAAW7I,EAAM8I,IAAK,SAAAC,GAAQxF,EAAcE,QAAQiE,GAAOqB,IAE3F,kBAAC,EAAD,CAEIjK,GAAI4I,EACJiE,UAAWzN,EAAMyN,UACjBzK,KAAMlB,EACNiD,IAAK/E,EAAMY,SAO1BZ,EAAM4I,OAAOW,KAAI,SAACzH,EAAM0H,GACrB,OACI,kBAAC,GAAD,CACIC,IAAKD,EACL1H,KAAMA,EACN6B,OAAQA,EAAO6F,GACf7E,gBAAiBA,EACjBC,UAAWA,EACXiH,kBAAmB7L,EAAM6L,yBCtO1C,SAASW,GAAiBxH,EAAYC,EAAUyI,GACnDlO,QAAQC,IAAI,qBA2BZ,IA1BA,IAAIkO,EAAQ3I,EAAW4I,MAAM,KAAKrE,KAAI,SAAAzH,GAClC,OAAO+L,SAAS/L,MAGhBgM,EAAQ7I,EAAS2I,MAAM,KAAKrE,KAAI,SAAAzH,GAChC,OAAO+L,SAAS/L,MAMhBuI,EAAY,GAMZ0D,EAAkBL,EAClBM,EAAgB,GAAKD,EAGrBE,GATQH,EAAM,GAAKH,EAAM,IASCK,GANXF,EAAM,GAAKH,EAAM,IAM2BI,EAAmB,EAE9EG,GAAY,EACZC,GAAcJ,EAETvH,EAAI,EAAGA,EAAIyH,EAAgBzH,IAAK,CACjCA,EAAIwH,IAAkB,GACtBE,IACAC,EAAa,GAGbA,GAAcJ,EAElB,IAAIK,EAAYT,EAAM,GAAKO,EACvBG,EAAcV,EAAM,GAAKQ,EACV,IAAfE,IACAA,EAAa,MAEjBhE,EAAUtB,KAAV,UAAkBqF,EAAlB,YAA8BC,IAIlC,OADA7O,QAAQC,IAAR,sBAA2B4K,IACpBA,E,ICjCHiE,GAAmBC,KAAnBD,MAAOE,GAAYD,KAAZC,QA2MAC,GA1MA,WACX,IAAIzD,EAAO,IAAIC,KACXC,EAAeF,EAAKG,UAAYH,EAAKI,SAAW,EAFnC,EAGuBnL,mBAAS,IAHhC,mBAGVyO,EAHU,KAGIC,EAHJ,OAIS1O,mBAAS,CAC/B,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,UAAW,MAAS,QAAS,IAAO,QAAS,GAAM,GAC5D,CAAE,IAAO,YAAa,MAAS,QAAS,IAAO,QAAS,GAAM,GAC9D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,GAC7D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,KAXhD,mBAIVsK,EAJU,aAemDtK,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAfrF,mBAeV2O,EAfU,KAekBC,EAflB,OAgBW5O,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAhB7C,mBAgBV2I,EAhBU,KAgBF2C,EAhBE,OAiBetL,oBAAU,GAjBzB,mBAiBVuF,EAjBU,KAiBAsJ,EAjBA,iDAmBjB,kCAAA1N,EAAA,6DACQoK,EAAW,CACX,OAAU5C,EAAO6C,OACjB,WAAcjG,GAHtB,SAKmCxD,EAAgBwJ,EAAU,UAL7D,gBAKY1J,EALZ,EAKYA,KAAMC,EALlB,EAKkBA,OACdvC,QAAQC,IAAR,gBAAqBqC,EAArB,qBAAsCC,IAEtCgN,IARJ,4CAnBiB,+BA6BFA,IA7BE,2EA6BjB,8BAAA3N,EAAA,sEACmCF,EAAc,oBADjD,gBACYY,EADZ,EACYA,KACO,MAFnB,EACkBC,QAIV4M,EAAgB7M,GALxB,4CA7BiB,sBAsCjBkH,qBAAU,WACN+F,MACD,IAEH,IACM5E,EAAaoC,mBAAQ,WACvB,OAAOC,GAAiBjC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,IAF/B,MAGnB,CAACnC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,MAY7B,SAASsC,EAAmCvF,EAAKwF,GAE7C,IAAK,IAAIzI,EAAI,EAAGA,EAAIkI,EAAajI,OAAQD,IACrC,GAAIqH,SAASa,EAAalI,GAAG5F,MAAQiN,SAASpE,GAG1C,OAFAjK,QAAQC,IAAI,kBACZD,QAAQC,IAAIyP,OAAOC,KAAKT,EAAalI,KAC9BkI,EAAalI,GAAGyI,GAG/B,MAAO,GAGX,SAAS5F,EAAerE,EAAYC,EAAUrE,EAAImE,GAC/B8I,SAAS9I,GAExB,IAFA,IACI+G,EAAa,YAAOlD,GACfpC,EAAI,EAAGA,EAAIoC,EAAOnC,OAAQD,IAC/BsF,EAActF,GAAKoC,EAAOpC,GAG9B,IAAIoF,EAAW,CACX,WAAc5G,EACd,SAAYC,EACZ,GAAMrE,EACN,IAAOmE,GAEX+G,EAAc/G,GAAKgE,KAAK6C,GACxBL,EAAUO,GAId,SAASD,EAAkB9G,EAAKnE,GAG5B,IAFA,IAAIkL,EAAa,YAAOlD,GAEfpC,EAAI,EAAGA,EAAIsF,EAAcrF,OAAQD,IACtCsF,EAActF,GAAd,YAAuBoC,EAAOpC,IAGlC,IAAK,IAAIA,EAAI,EAAGA,EAAIsF,EAAc/G,GAAK0B,OAAQD,IACvCsF,EAAc/G,GAAKyB,GAAG5F,KAAOA,GAC7BkL,EAAc/G,GAAKgH,OAAOvF,EAAG,GAGrC+E,EAAUO,GAGd,SAAS7F,EAAYjB,EAAYC,EAAUrE,EAAImE,GAG3C,IAFA,IAAM+G,EAAa,YAAOlD,GAEjBpC,EAAI,EAAGA,EAAIoC,EAAOnC,OAAQD,IAC/BsF,EAActF,GAAd,YAAuBoC,EAAOpC,IAElBsF,EAAc/G,GAA9B,IAEImH,EAAaJ,EAAc/G,GAAKoH,WAAU,SAAAjE,GAAK,OAAIA,EAAMtH,KAAOA,KAChEwL,EAAe,CAAE,WAAcpH,EAAY,SAAYC,EAAU,GAAMrE,EAAI,IAAOmE,GAEtF+G,EAAc/G,GAAKmH,GAAcE,EACjCb,EAAUO,GAgCd,OACI,kBAAC,KAAD,KACI,kBAACwC,GAAD,KACI,kBAAC9L,EAAD,KACI,kBAAC,KAAD,CAAMmK,QAhCtB,YAAsE,EAA9CyC,KAA+C,IAAzC3F,EAAwC,EAAxCA,IACtB4F,GAD8D,EAAnCC,QAAmC,EAA1BC,aAA0B,EAAZC,SACjBR,EAAmCvF,EAAK,wBAC7EjK,QAAQC,IAAR,0BAA+B4P,IAI/B,IAHA,IAAMI,EAAyB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAG/CjJ,EAAI,EAAGA,EAAI6I,EAA+B5I,OAAQD,IAAK,CAC5D,IAAIkJ,EAAeL,EAA+B7I,GAClDiJ,EAAuBC,EAAa3K,KAAKgE,KAAK2G,GAMlD,IAHA,IAAIC,EAAyBX,EAAmCvF,EAAK,eAC/DmG,EAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEvCpJ,EAAI,EAAGA,EAAImJ,EAAuBlJ,OAAQD,IAAK,CACpD,IAAI0B,EAAQyH,EAAuBnJ,GACnCoJ,EAAe1H,EAAMnD,KAAKgE,KAAKb,GAGnCqD,EAAUqE,GACVf,EAA8BY,GAC9BX,EAAYrF,IAW6BoG,MAAM,OAAOC,KAAK,YAC1CpB,EAAanF,KAAI,SAAAzH,GACd,OACI,kBAAC,KAAKiO,KAAN,CAAWtG,IAAK3H,EAAKlB,IAChBkB,EAAKkO,WAM1B,kBAAC,IAAD,CAAQrD,QAhKH,4CAgKL,YAEJ,kBAAC6B,GAAD,KACI,kBAAC7E,EAAD,KACKY,EAAMhB,KAAI,SAACzH,EAAM0H,GACd,OACI,kBAACE,EAAD,CAAmBD,IAAKD,EAAM,IAC1B,kBAAC,GAAD,CACIiB,SAAUS,EAAe1B,EACzBhE,SAAUA,EACVT,IAAKjD,EAAKiD,IACV0H,MAAO3K,EAAK2K,MACZC,IAAK5K,EAAK4K,IACVpC,eAAgBsE,EAA2BpF,GAC3CZ,OAAQA,EAAOY,GACfgB,SAAUL,EACVvJ,GAAIkB,EAAKlB,GACTyI,eAAgBA,EAChBpD,YAAaA,EACbnB,YAAa+G,Y,8OChMjD,IAAMoE,GAAazP,IAAOiC,IAAV,MAKT,SAAAzC,GAAK,OAAIA,EAAMkD,UACd,SAAAlD,GAAK,OAAIA,EAAMmD,WACb,SAAAnD,GAAK,OAAIA,EAAMoD,aACjB,SAAApD,GAAK,OAAIA,EAAMqD,YACH,SAAArD,GAAK,OAAIA,EAAMkQ,YAErB,SAAAlQ,GAAK,OAAIA,EAAMmQ,SAAW,UAAY,MA+CrCC,GA5CY,SAACpQ,GAIxB,IAAI0D,EAAU,GAmBd,MAlB8B,qBAAlB1D,EAAM2D,SACdD,EAAU,CACNE,IAAI,GAAD,OAAK5D,EAAM2D,OAAOC,IAAlB,MACHC,OAAO,GAAD,OAAK7D,EAAM2D,OAAOE,OAAlB,MACNC,KAAK,GAAD,OAAK9D,EAAM2D,OAAOG,KAAlB,MACJC,MAAM,GAAD,OAAK/D,EAAM2D,OAAOI,MAAlB,MACLoM,SAAUnQ,EAAM8B,KAAKqO,SACrBnP,MAAM,GAAD,OAAKhB,EAAM8B,KAAKd,SAS7BxB,QAAQC,IAAIO,EAAM8B,KAAKqO,UAGnB,6BACI,kBAACF,GAAD,CACI7M,UAAWM,EAAQG,OACnBX,OAAQQ,EAAQE,IAChBT,QAASO,EAAQI,KACjBT,SAAUK,EAAQK,MAClB4I,QAZZ,WACI3M,EAAMqQ,cAAcrQ,EAAM8B,KAAKwO,WAYvBH,SAAUzM,EAAQyM,SAClBD,SAAUxM,EAAQ1C,U,mHC3ClC,IAAMuP,GAAe/P,YAAOuJ,IAAPvJ,CAAH,MAmKHgQ,GA9JU,SAACxQ,GAORoF,EAAQ,IAKtB,IAAMC,EAAgB4E,iBAAO,IAZG,EAaJhK,mBAAS,IAbL,mBAazB0D,EAbyB,KAajB+B,EAbiB,KAgChC,SAASwE,EAAclH,EAAMmH,GAGzB,IADA,IAAIC,GAAS,EACJ5D,EAAI,EAAGA,EAAI2D,EAAW1D,OAAQD,IAC/B2D,EAAW3D,KAAOxD,IAClBoH,EAAQ5D,GAIhB,OAAO4D,EAMX,SAASnC,EAAoBC,EAAOmC,GAChC,IAAIhD,GAAc,EACdC,GAAY,EAQhB,GANIY,EAAMnD,MAAQ/E,EAAMY,KACpByG,EAAa6C,EAAchC,EAAMlD,WAAYqF,GAC7C/C,EAAW4C,EAAchC,EAAMjD,SAAUoF,IAIzChD,EAAa,GAAKC,EAAW,EAE7B,OADA9H,QAAQC,IAAR,cAAmBO,EAAMY,GAAzB,mDACO,GAGP,IACIyH,EAAsBhD,EAAcE,QAAQ8B,GAC5CiB,EAAoBjD,EAAcE,QAAQ+B,GAC1CiB,EAAgBF,EAAoBG,UAQxC,MAHkB,CAACD,EAJDD,EAAkBE,UAAYF,EAAkBG,aAGvCF,EAFhBF,EAAoBK,WACnBL,EAAoBM,aASxC,SAASZ,IACL,IAAItC,EAAc,GAClB,GAAIzF,EAAM4I,OAAOnC,OAAS,EAEtB,IADA,IAAI3C,EAAO,EACF0C,EAAI,EAAGA,EAAIxG,EAAM4I,OAAOnC,OAAQD,IAAK,CAC1C,IAAMqC,EAAcZ,EAAoBjI,EAAM4I,OAAOpC,GAAI+D,GACrD3G,EAAMiF,EAAY,GAClBhF,EAASgF,EAAY,GACrB9E,EAAQ8E,EAAY,GAAK7I,EAAM4I,OAAOnC,OAC7B,IAAT3C,EACAA,EAAO+E,EAAY,GAGnB/E,GAAQC,EAEZ,IAAI+E,EAAa,CACbjF,OAAQA,EACRD,IAAKA,EACLE,KAAMA,EACNC,MAAOA,GAEX0B,EAAYsD,KAAKD,GAGzBpD,EAAUD,GAId,IAAM8E,EAAQvK,EAAMwK,SAYpB,OAVAxB,qBAAU,WAGN,OAFAjB,IACAkB,OAAOlC,iBAAiB,SAAUgB,GAC1B,WACJkB,OAAOhC,oBAAoB,SAAUc,MAG1C,CAAC/H,EAAM4I,SAKN,yBAAKjI,UAAU,aACX,kBAAC4P,GAAD,CAAc5D,QA7EtB,WACInN,QAAQC,IAAI,cA4E+BO,EAAM+E,IAA7C,KAAmD,gCAAS/E,EAAMyK,WAE9DF,EAAMhB,KAAI,SAACzH,EAAM0H,GACb,OACI,yBAAKC,IAAKD,EAAKkB,WAAU1K,EAAM+E,IAAK4F,YAAW7I,EAAM8I,IAAK,SAAAC,GAAQxF,EAAcE,QAAQiE,GAAOqB,IAE3F,kBAAC,EAAD,CAEIjK,GAAI4I,EAEJxG,KAAMlB,QAUtB9B,EAAM4I,OAAOW,KAAI,SAACzH,EAAM0H,GACpB,OACI,kBAAC,GAAD,CACIC,IAAKD,EACL1H,KAAMA,EACN6B,OAAQA,EAAO6F,GACf6G,cAAerQ,EAAMqQ,qB,yOCzJjD,IAAME,GAAe/P,YAAOuJ,IAAPvJ,CAAH,MACA,SAAAR,GAAK,OAAIA,EAAMmQ,SAAW,UAAY,MACpC,SAAAnQ,GAAK,OAAIA,EAAMkQ,YAEX,SAAAlQ,GAAK,OAAIA,EAAMkQ,YACtB,SAAAlQ,GAAK,OAAIA,EAAMkQ,YACF,SAAAlQ,GAAK,OAAIA,EAAMkQ,YAsB9BO,GAlBM,SAACzQ,GAQlB,OACI,oCACI,kBAAC,GAAD,CAAckQ,SAAUlQ,EAAMkQ,SAAUC,SAAUnQ,EAAMmQ,SAAUxD,QAR1E,WAEI3M,EAAMqQ,cAAcrQ,EAAMY,MAMqEZ,EAAMgQ,MACjG,kBAAC,KAAD,Q,yRCVJ1B,GAAmBC,KAAnBD,MAAOE,GAAYD,KAAZC,QAETkC,GAAkBlQ,YAAO8N,GAAP9N,CAAH,MAGfmQ,GAAenQ,YAAO+N,KAAP/N,CAAH,MA4JHoQ,IAxJMpQ,YAAOuJ,IAAPvJ,CAAH,MAGD,WAAO,IAAD,EACOP,mBAAS,CAC/B,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,UAAW,MAAS,QAAS,IAAO,QAAS,GAAM,GAC5D,CAAE,IAAO,YAAa,MAAS,QAAS,IAAO,QAAS,GAAM,GAC9D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,GAC7D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,KAR9C,mBACZsK,EADY,KAYfS,GAZe,KAYR,IAAIC,MACXC,EAAeF,EAAKG,UAAYH,EAAKI,SAAW,EAE9CyF,EAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAfzF,EAiBS5Q,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAjB3C,mBAiBZ2I,EAjBY,KAiBJ2C,EAjBI,OAkBqBtL,mBAAS,IAlB9B,mBAkBZyO,EAlBY,KAkBEC,EAlBF,KAoBbxE,EAAaoC,mBAAQ,WACvB,OAAOC,GAAiBjC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,IAP/B,MAQnB,CAACnC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,MAtBV,SAuBJoE,IAvBI,2EAuBnB,sBAAA1P,EAAA,sEACiBF,EAAc,UAD/B,oFAvBmB,sBA+BnB,SAAS6P,EAAqBC,GAC1B,IAAMC,EAAkBvC,EAAanF,KAAI,SAAC/D,GAOtC,OANIA,EAAS5E,KAAOoQ,EAChBxL,EAAS2K,UAAW,EAGpB3K,EAAS2K,UAAW,EAEjB3K,KAEXmJ,EAAgBsC,GAzCD,4CAuEnB,oCAAA7P,EAAA,sEAEiC0P,IAFjC,OAMI,IANJ,SAEUhP,EAFV,EAEUA,KAAMC,EAFhB,EAEgBA,OAIHyE,EAAI,EAAGA,EAAI1E,EAAK2E,OAAQD,IAC7B1E,EAAK0E,GAAG2J,UAAW,EACfe,EAAa1K,EAAIqK,EAAWpK,OAChC3E,EAAK0E,GAAGxF,MAAQ6P,EAAWK,GAIhB,MAAXnP,GACA4M,EAAgB7M,GAdxB,4CAvEmB,sBA0FnB,OA7CAkH,qBAAU,YA7CS,mCA8Cf+F,KACD,IAEH/F,qBAAU,WAEN,IADA,IAAMmI,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACtC3K,EAAI,EAAGA,EAAIkI,EAAajI,OAAQD,IACrC,IAAK,IAAI4K,EAAI,EAAGA,EAAI1C,EAAalI,GAAG6K,YAAY5K,OAAQ2K,IAAK,CACzD5R,QAAQC,IAAI,SACZ,IAAIyI,EAAQ,CACR,KAAQwG,EAAalI,GAAGwJ,KACxB,IAAOtB,EAAalI,GAAG6K,YAAYD,GAAGrM,IACtC,WAAc2J,EAAalI,GAAG6K,YAAYD,GAAGpM,WAC7C,SAAY0J,EAAalI,GAAG6K,YAAYD,GAAGnM,SAC3C,GAAMyJ,EAAalI,GAAG6K,YAAYD,GAAGxQ,GACrC,SAAY8N,EAAalI,GAAG5F,GAC5B,SAAY8N,EAAalI,GAAG2J,SAC5B,MAASzB,EAAalI,GAAGxF,OAE7BmQ,EAAczC,EAAalI,GAAG6K,YAAYD,GAAGrM,KAAKgE,KAAKb,GAG/DqD,EAAU4F,KACX,CAACzC,IAuBA,kBAACiC,GAAD,KACI,kBAACD,GAAD,KACKhC,EAAanF,KAAI,SAACzH,GACf,OAEI,kBAAC,GAAD,CACIqO,SAAUrO,EAAKqO,SACfvP,GAAIkB,EAAKlB,GACT6I,IAAK3H,EAAKlB,GACVoP,KAAMlO,EAAKkO,KACXK,cAAeU,EACfb,SAAUpO,EAAKd,YAO/B,kBAAC,GAAD,KACI,kBAAC2I,EAAD,KAEQY,EAAMhB,KAAI,SAACzH,EAAM0H,GACb,OACI,kBAACE,EAAD,CAAmBD,IAAG,WAAMD,IACxB,kBAAC,GAAD,CACIzE,IAAKjD,EAAKiD,IAEV0F,SAAUS,EAAe1B,EACzBiD,MAAO3K,EAAK2K,MACZC,IAAK5K,EAAK4K,IAEV9D,OAAQA,EAAOY,GACfgB,SAAUL,EACVvJ,GAAIkB,EAAKlB,GACTyP,cAAeU,aCjHxCO,GAnCC,WAAO,IAAD,EAEcrR,mBAAS,IAFvB,mBAEXsR,EAFW,KAEDC,EAFC,iDAIlB,gCAAApQ,EAAA,6DACI5B,QAAQC,IAAI,sBADhB,SAEmCyB,EAAc,YAFjD,gBAEYY,EAFZ,EAEYA,KAAMC,EAFlB,EAEkBA,OACdvC,QAAQC,IAAR,wBAA6BC,KAAKC,UAAUmC,GAA5C,6BAAsEC,IACvD,MAAXA,GACAvC,QAAQC,IAAR,wBAA6BC,KAAKC,UAAUmC,KAC5C0P,EAAY1P,KAIZtC,QAAQC,IAAI,WACZD,QAAQC,IAAR,kBAAuBsC,KAX/B,4CAJkB,sBAyBlB,OAPAiH,qBAAU,WACNxJ,QAAQC,IAAI,cAnBE,mCAoBdgS,KAED,IAIC,6BACI,qCAAWF,EAASvB,MACpB,kBAAC,KAAD,MACA,sCAAYuB,EAASG,S,oBCdlBC,GAhBW,SAAC3R,GAGvB,OAFAR,QAAQC,IAAR,wBAA6BC,KAAKC,UAAUK,EAAM8B,QAG9C,6BACI,4BACK9B,EAAM8B,KAAKkO,MAEhB,kBAAC,KAAD,Q,2RCNZ,IAAM4B,GAAapR,IAAOiC,IAAV,MAGVoP,GAAerR,YAAOuJ,IAAPvJ,CAAH,MA6BHsR,GArBS,SAAC9R,GAOrB,OACI,kBAAC4R,GAAD,KACI,wBAAI/Q,MAAO,CAAEkR,QAAS,iBACjB/R,EAAM8B,KAAKkO,MAEhB,kBAAC6B,GAAD,CAAclF,QAVtB,WACI3M,EAAMgS,OAAOhS,EAAM8B,KAAKlB,MASpB,UACA,kBAAC,KAAD,Q,8PCpBJ4N,GAAmBD,KAAnBC,QAASF,GAAUC,KAAVD,MACX2D,GAAgBzR,YAAO8N,GAAP9N,CAAH,MAIb0R,GAAkB1R,YAAOgO,GAAPhO,CAAH,MA6HN2R,GA9GM,WAAO,IAAD,EAEyBlS,mBAAS,IAFlC,mBAEhBmS,EAFgB,KAEEC,EAFF,OAG6BpS,mBAAS,IAHtC,mBAGhBqS,EAHgB,KAGIC,EAHJ,KAIXnT,aAAaC,QAAQ,UAJV,4CAMvB,WAAwBE,GAAxB,iBAAA6B,EAAA,6DACI5B,QAAQC,IAAR,gBAAqBC,KAAKC,UAAUJ,KACpCC,QAAQC,IAAI,SACR+L,EAAW,CACX,MAASjM,EAAMmS,MACf,KAAQnS,EAAMyQ,MALtB,SAOiChO,EAAgBwJ,EAAU,iBAP3D,kBAOU1J,KACS,MARnB,EAOgBC,QAGRyQ,IAVR,4CANuB,+BAsBRC,EAtBQ,8EAsBvB,WAA8B7R,GAA9B,eAAAQ,EAAA,4DACmB,CACX,GAAMR,GAFd,SAIiCuB,EAAkBvB,EAAI,YAJvD,kBAIUkB,KACS,MALnB,EAIgBC,QAERyQ,IANR,4CAtBuB,+BAkCRA,IAlCQ,2EAkCvB,oCAAApR,EAAA,sEAEiCF,EAAc,iBAF/C,gBAEUY,EAFV,EAEUA,KAAMC,EAFhB,EAEgBA,OACZvC,QAAQC,IAAR,gBAAqBC,KAAKC,UAAUmC,GAApC,qBAAsDC,IAClD2Q,EAAgB5Q,EAAK6Q,UACrBC,EAAgB9Q,EAAK+Q,QAEzBN,EAAsBG,GACtBL,EAAoBO,GARxB,6CAlCuB,sBAkDvB,OANA5J,qBAAU,WAENwJ,MAED,IAGC,kBAAC,KAAD,KACI,kBAACP,GAAD,KACI,oDACA,kBAAC,KAAD,MACCK,EAAmB/I,KAAI,SAACzH,GAErB,OACI,kBAAC,GAAD,CAAmBkQ,OAAQS,EAAgB3Q,KAAMA,QAI7D,kBAACoQ,GAAD,KACI,kDACA,kBAAC,KAAD,MACCE,EAAiB7I,KAAI,SAACzH,GACnB,OACI,kBAAC,GAAD,CAAiBkQ,OAAQS,EAAgB3Q,KAAMA,OAGvD,kBAAC,KAAD,CAEIgR,SAxEO,6CA0EP,kBAAC,KAAK/C,KAAN,CACIgD,MAAM,QACN/C,KAAK,QACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,sCAEb,CACIC,KAAM,WAId,kBAAC,KAAD,OAEJ,kBAAC,KAAKpD,KAAN,CACIgD,MAAM,OACN/C,KAAK,OACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,0BAIjB,kBAAC,KAAD,OAGJ,kBAAC,IAAD,CAAQE,SAAS,UAAjB,oB,SClELC,GAnDC,WACZ,IAAMlT,EAAUL,IAOhB,IAAMwT,EAAQC,eACd,OACI,6BACI,gCACI,6BACI,wBAAI5S,UAAW,YACX,wBAAIE,MAAO,CAAEC,YAAa,SACtB,kBAAC,IAAD,CAAMC,GAAE,UAAKuS,EAAME,IAAX,aAA0B,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,kBAEtC,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAE,UAAKuS,EAAME,IAAX,mBAAgC,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,mBAE5C,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAE,UAAKuS,EAAME,IAAX,YAAyB,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,gBAErC,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAE,UAAKuS,EAAME,IAAX,cAA2B,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,mBAEvC,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAI,IAAI,kBAACR,EAAD,CAAWS,MAAM,UAAU2L,QAzBjE,WAEIvN,aAAaqU,QACbtT,EAAQ,CAAE,QAAU,EAAO,SAAW,MAsBJ,eAK9B,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOuT,KAAI,UAAKJ,EAAMI,KAAX,aACP,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,mBACP,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,YACP,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,cACP,kBAAC,GAAD,U,4NCtDpB,IAAMzD,GAAazP,IAAOiC,IAAV,MAKT,SAAAzC,GAAK,OAAIA,EAAMkD,UACd,SAAAlD,GAAK,OAAIA,EAAMmD,WACb,SAAAnD,GAAK,OAAIA,EAAMoD,aACjB,SAAApD,GAAK,OAAIA,EAAMqD,WACH,WAwCLsQ,GApCY,SAAC3T,GAExBR,QAAQC,IAAR,+CAAoDC,KAAKC,UAAUK,KAEnE,IAAI0D,EAAU,GAad,MAZ8B,qBAAlB1D,EAAM2D,SACdD,EAAU,CACNE,IAAI,GAAD,OAAK5D,EAAM2D,OAAOC,IAAlB,MACHC,OAAO,GAAD,OAAK7D,EAAM2D,OAAOE,OAAlB,MACNC,KAAK,GAAD,OAAK9D,EAAM2D,OAAOG,KAAlB,MACJC,MAAM,GAAD,OAAK/D,EAAM2D,OAAOI,MAAlB,MACL/C,MAAM,GAAD,OAAKhB,EAAM8B,KAAKd,SAOzB,6BACI,kBAAC,GAAD,CACIoC,UAAWM,EAAQG,OACnBX,OAAQQ,EAAQE,IAChBT,QAASO,EAAQI,KACjBT,SAAUK,EAAQK,MAClBmM,SAAUxM,EAAQ1C,OAEjBhB,EAAM8B,KAAKkD,WAPhB,MAO+BhF,EAAM8B,KAAKmD,YCgHvC2O,GApJK,SAAC5T,GAMHoF,EAAQ,IAItB5F,QAAQC,IAAR,2CAAgDC,KAAKC,UAAUK,EAAM4I,UAErE,IAAMvD,EAAgB4E,iBAAO,IAZF,EAaChK,mBAAS,IAbV,mBAapB0D,EAboB,KAaZ+B,EAbY,KAcvBsF,EAAO,IAAIC,KACID,EAAKG,UAAYH,EAAKI,SAkBzC,SAASlB,EAAclH,EAAMmH,GAGzB,IADA,IAAIC,GAAS,EACJ5D,EAAI,EAAGA,EAAI2D,EAAW1D,OAAQD,IAC/B2D,EAAW3D,KAAOxD,IAClBoH,EAAQ5D,GAIhB,OAAO4D,EAGX,SAASnC,EAAoBC,EAAOmC,GAChC,IAAIhD,GAAc,EACdC,GAAY,EAQhB,GANIY,EAAMnD,MAAQ/E,EAAMY,KACpByG,EAAa6C,EAAchC,EAAMlD,WAAYqF,GAC7C/C,EAAW4C,EAAchC,EAAMjD,SAAUoF,IAIzChD,EAAa,GAAKC,EAAW,EAE7B,OADA9H,QAAQC,IAAR,cAAmBO,EAAMY,GAAzB,mDACO,GAGP,IACIyH,EAAsBhD,EAAcE,QAAQ8B,GAC5CiB,EAAoBjD,EAAcE,QAAQ+B,GAC1CiB,EAAgBF,EAAoBG,UAQxC,MAHkB,CAACD,EAJDD,EAAkBE,UAAYF,EAAkBG,aAGvCF,EAFhBF,EAAoBK,WACnBL,EAAoBM,aASxC,SAASZ,IACL,IAAItC,EAAc,GAClB,GAAIzF,EAAM4I,OAAOnC,OAAS,EACtB,IAAK,IAAID,EAAI,EAAGA,EAAIxG,EAAM4I,OAAOnC,OAAQD,IAAK,CAC1C,IAAMqC,EAAcZ,EAAoBjI,EAAM4I,OAAOpC,GAAI+D,GACrD3G,EAAMiF,EAAY,GAIlBC,EAAa,CACbjF,OAJSgF,EAAY,GAKrBjF,IAAKA,EACLE,KALO+E,EAAY,GAMnB9E,MALQ8E,EAAY,IAOxBpD,EAAYsD,KAAKD,GAGzBpD,EAAUD,GAId,IAAM8E,EAAQvK,EAAMwK,SAWpB,OATAxB,qBAAU,WAGN,OAFAjB,EAAqB/H,EAAM4I,QAC3BK,OAAOlC,iBAAiB,SAAUgB,GAC1B,WACJkB,OAAOhC,oBAAoB,SAAUc,MAE1C,CAAC/H,EAAM4I,SAKN,yBAAKjI,UAAU,aACX,kBAACkJ,EAAD,KAAK,2BAAI7J,EAAM+E,IAAV,KAAgB,gCAAS/E,EAAMyK,YAEhCF,EAAMhB,KAAI,SAACzH,EAAM0H,GACb,OACI,yBAAKC,IAAKD,EAAKkB,WAAU1K,EAAM+E,IAAK4F,YAAW7I,EAAM8I,IAAK,SAAAC,GAAQxF,EAAcE,QAAQiE,GAAOqB,IAE3F,kBAAC,EAAD,CAEIjK,GAAI4I,EAEJxG,KAAMlB,QAUtB9B,EAAM4I,OAAOW,KAAI,SAACzH,EAAM0H,GACpB,OACI,kBAAC,GAAD,CACIC,IAAKD,EACL1H,KAAMA,EACN6B,OAAQA,EAAO6F,UC3E5BqK,GAxDM,SAAC7T,GAClB,IAAIgL,EAAO,IAAIC,KACXC,EAAeF,EAAKG,UAAYH,EAAKI,SAAW,EAFxB,EAGFnL,mBAAS,CAC/B,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,UAAW,MAAS,QAAS,IAAO,QAAS,GAAM,GAC5D,CAAE,IAAO,YAAa,MAAS,QAAS,IAAO,QAAS,GAAM,GAC9D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,GAC7D,CAAE,IAAO,SAAU,MAAS,QAAS,IAAO,QAAS,GAAM,GAC3D,CAAE,IAAO,WAAY,MAAS,QAAS,IAAO,QAAS,GAAM,KAVrC,mBAGrBsK,EAHqB,UAe5B/K,QAAQC,IAAR,qCAA0CO,EAAM4I,SAEhD,IAAMuB,EAAaoC,mBAAQ,WACvB,OAAOC,GAAiBjC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,IAJ/B,MAKnB,CAACnC,EAAM,GAAGkC,MAAOlC,EAAM,GAAGmC,MAE7B,OACI,kBAAC/C,EAAD,KAEQY,EAAMhB,KAAI,SAACzH,EAAM0H,GACb,OACI,kBAACE,EAAD,CAAmBD,IAAKD,EAAM,IAC1B,kBAAC,GAAD,CACIzE,IAAKjD,EAAKiD,IACV0F,SAAUS,EAAe1B,EACzBiD,MAAO3K,EAAK2K,MACZC,IAAK5K,EAAK4K,IACV9D,OAAQ5I,EAAM4I,OAAOY,GACrBgB,SAAUL,EACVvJ,GAAIkB,EAAKlB,WCJ1BgQ,GArCE,WAAO,IAAD,EAES3Q,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAF3C,mBAEZ2I,EAFY,KAEJ2C,EAFI,iDAInB,wCAAAnK,EAAA,sEAEmCF,EAAc,eAFjD,OAII,GAJJ,SAEYY,EAFZ,EAEYA,KAAMC,EAFlB,EAEkBA,OACdvC,QAAQC,IAAR,gBAAqBC,KAAKC,UAAUmC,GAApC,qBAAsDC,IACvC,MAAXA,EAAgB,CAGhB,IAFI+J,EADY,YACQlD,GAEfpC,EAAI,EAAGA,EAAIsF,EAAcrF,OAAQD,IACtCsF,EAActF,GAAd,YAAuBoC,EAAOpC,IAGlC,IAASA,EAAI,EAAGA,EAAI1E,EAAK2E,OAAQD,IACzB6F,EAAcvK,EAAK0E,GACvBsF,EAAcO,EAAYtH,KAAKgE,KAAKsD,GAExC7M,QAAQC,IAAR,mCAAwCqM,IACxCP,EAAUO,GAhBlB,4CAJmB,sBAgCnB,OAPA9C,qBAAU,YAzBS,mCA0BfsD,KAGD,IAKC,kBAAC,GAAD,CAAc1D,OAAQA,KC8BfkL,GAhDE,WACb,IAAM3T,EAAUL,IAUhB,IAAIwT,EAAQC,eAEZ,OADA/T,QAAQC,IAAR,qBAA0B6T,EAAME,MAE5B,6BACI,gCACI,6BACI,wBAAI7S,UAAW,YACX,wBAAIE,MAAO,CAAEC,YAAa,SACtB,kBAAC,IAAD,CAAMC,GAAE,UAAKuS,EAAME,IAAX,aAA0B,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,kBAEtC,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAE,UAAKuS,EAAME,IAAX,kBAA+B,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,uBAE3C,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAE,UAAKuS,EAAME,IAAX,cAA2B,kBAACjT,EAAD,CAAWS,MAAM,WAAjB,mBAEvC,wBAAIL,UAAW,eACX,kBAAC,IAAD,CAAMI,GAAI,IAAI,kBAACR,EAAD,CAAWS,MAAM,UAAU2L,QA1BjE,WAEIvN,aAAaqU,QAGbtT,EAAQ,CAAE,QAAU,EAAO,SAAW,MAqBJ,eAK9B,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOuT,KAAI,UAAKJ,EAAMI,KAAX,aACP,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,kBACP,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAI,UAAKJ,EAAMI,KAAX,cACP,kBAAC,GAAD,U,miBC3Db,IAAMK,GAAgBvT,IAAOiC,IAAV,MAgBbuR,GAAaxT,IAAOiC,IAAV,MChBhB,SAAewR,GAAtB,uC,8CAAO,WAAyBvC,EAAOwC,EAAUC,GAA1C,qBAAA/S,EAAA,6DACCoK,EAAW,CACX,MAASkG,EACT,SAAYwC,GAHb,SAKkB1S,MAAM,GAAD,OAAIlB,EAAJ,oBAAgC,CACtDmB,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBQ,KAAMxC,KAAKC,UAAU6L,GACrB4I,OAAQD,EAAWC,SAXpB,cAKCxS,EALD,gBAacA,EAASC,OAbvB,cAaCC,EAbD,gBAcgBF,EAASG,OAdzB,cAcCA,EAdD,yBAeI,CAAE,KAAQD,EAAM,OAAUC,IAf9B,6C,sBAmBA,SAAesS,GAAtB,mC,8CAAO,WAA4BC,GAA5B,qBAAAlT,EAAA,6DACCoK,EAAW,CACX,MAAS8I,EAAO5C,MAChB,KAAQ4C,EAAOtE,KACf,SAAYsE,EAAOJ,SACnB,MAASI,EAAOC,MAChB,SAAYD,EAAOE,UANpB,SAQkBhT,MAAM,GAAD,OAAIlB,EAAJ,sBAAkC,CACxDmB,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBQ,KAAMxC,KAAKC,UAAU6L,KAbtB,cAQC5J,EARD,gBAgBcA,EAASC,OAhBvB,cAgBCC,EAhBD,gBAiBgBF,EAASG,OAjBzB,cAiBCA,EAjBD,OAkBHvC,QAAQC,IAAR,kBAAuBsC,IACvBvC,QAAQC,IAAR,oBAAyBC,KAAKC,UAAUmC,KAnBrC,kBAoBI,CAAE,KAAQA,EAAM,OAAUC,IApB9B,6C,sBAuBA,SAAe0S,GAAtB,qC,8CAAO,WAAgCC,EAAQC,GAAxC,uBAAAvT,EAAA,6DACCwT,EAAMF,EACVlV,QAAQC,IAAR,eAAoBmV,IAChBpJ,EAAW,CACX,SAAYmJ,EAAUT,UAJvB,SAMkB1S,MAAM,GAAD,OAAIlB,EAAJ,oBAAgC,CACtDmB,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,cAAgB,OAAhB,OAAwBkT,IAE5BjT,YAAa,UACbO,KAAMxC,KAAKC,UAAU6L,KAbtB,cAMC5J,EAND,gBAiBcA,EAASC,OAjBvB,cAiBCC,EAjBD,iBAkBgBF,EAASG,OAlBzB,eAkBCA,EAlBD,yBAoBI,CAAE,KAAQD,EAAM,OAAUC,IApB9B,6C,sBCtCP,IAAM8S,GAAS,CACXC,SAAU,CACNC,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,IAEVE,GAAI,CACAF,KAAM,IAEVG,IAAK,CACDH,KAAM,IAGdI,WAAY,CACRL,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,IAEVE,GAAI,CACAF,KAAM,IAEVG,IAAK,CACDH,KAAM,MAMZK,GAAa,CACfD,WAAY,CACRE,OAAQ,EACRN,KAAM,KAsICO,GAlIU,SAACvV,GAAW,IAAD,EACFC,oBAAS,GADP,mBACzBuV,EADyB,KAChBC,EADgB,KAE1BC,EAAW,kBAAC,KAAD,CAAU3U,GAAG,WAFE,4CAGhC,WAAwBuT,GAAxB,mBAAAlT,EAAA,6DACI5B,QAAQC,IAAI,WAAY6U,GAD5B,SAEmCD,GAAaC,GAFhD,gBAEYvS,EAFZ,EAEYA,OAAQD,EAFpB,EAEoBA,KAChBtC,QAAQC,IAAR,0BAA+BsC,EAA/B,0BAAuDrC,KAAKC,UAAUmC,KACvD,MAAXC,GACA0T,GAAW,GALnB,4CAHgC,sBAehC,OAAID,EAEIE,EAKA,oCACI,wCACA,kBAAC,KAAD,iBACQb,GADR,CAEI7E,KAAK,QACL2F,cAAe,CACXC,UAAU,GAEd9C,SA9BgB,4CA+BhB+C,eAnBO,SAAAC,GACnBtW,QAAQC,IAAI,UAAWqW,MAoBX,kBAAC,KAAK/F,KAAN,CACIgD,MAAM,QACN/C,KAAK,QACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,6BACTC,KAAM,WAId,kBAAC,KAAD,OAGJ,kBAAC,KAAKpD,KAAN,CACIgD,MAAM,OACN/C,KAAK,OACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,6BAIjB,kBAAC,KAAD,OAGJ,kBAAC,KAAKnD,KAAN,CACIgD,MAAM,WACN/C,KAAK,WACL+F,aAAW,EACX/C,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAIjB,kBAAC,KAAM8C,SAAP,OAEJ,kBAAC,KAAKjG,KAAN,CACIgD,MAAM,mBACN/C,KAAK,mBACLiG,aAAc,CAAC,YACfF,aAAW,EACX/C,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+BACV,gBAAGgD,EAAH,EAAGA,cAAH,MAAwB,CACvBC,UADuB,SACbC,EAAM7W,GACZ,OAAKA,GAAS2W,EAAc,cAAgB3W,EAIrC8W,QAAQC,OAAO,oDAHXD,QAAQE,eAS/B,kBAAC,KAAMP,SAAP,OAEJ,kBAAC,KAAKjG,KAAN,CACIgD,MAAM,QACN/C,KAAK,QACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,0CAIjB,kBAAC,KAAD,OAEJ,kBAAC,KAAKnD,KAAN,CACIgD,MAAM,WACN/C,KAAK,WACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8CAIjB,kBAAC,KAAD,OAEJ,kBAAC,KAAKnD,KAASsF,GACX,kBAAC,IAAD,CAAQlC,KAAK,UAAUC,SAAS,UAAhC,cCnJToD,GAfS,WAIpB,OACI,kBAACxC,GAAD,KACI,kBAACyC,EAAD,MACA,kBAAC1C,GAAD,KACI,kBAAC,GAAD,CAAkB/G,SAAS,eCJrC6H,GAAS,CACXC,SAAU,CACNE,KAAM,IAEVI,WAAY,CACRJ,KAAM,KAGRK,GAAa,CACfD,WAAY,CACRE,OAAQ,EACRN,KAAM,KAiGC0B,GA7FG,WAAO,IAAD,EAEYzW,mBAAS,CAAE,UAAY,EAAO,WAAa,IAFvD,mBAGd0W,GAHc,UAGL/W,KACTO,EAAUL,IAJI,EAMsBG,mBAAS,IAN/B,mBAME2W,GANF,WAOdC,EAAkB,IAAIC,gBAPR,4CAUpB,WAAwBxC,GAAxB,iBAAAlT,EAAA,6DAEIwV,EAAiB,CAACtC,EAAO5C,MAAO4C,EAAOJ,WAF3C,SAImCD,GAAUK,EAAO5C,MAAO4C,EAAOJ,SAAU2C,GAJ5E,gBAIY/U,EAJZ,EAIYA,KACO,MALnB,EAIkBC,OAEVvC,QAAQC,IAAR,iBAAsBC,KAAKC,UAAUmC,MAGrC1C,aAAakD,QAAQ,cAAeR,EAAKS,QACzCnD,aAAakD,QAAQ,eAAgBR,EAAKO,SAE1ClC,EAAQ,CAAE,QAAU,EAAM,QAAW2B,EAAKiV,WAZlD,4CAVoB,sBA6BpB,OAAIJ,EAAOA,SAAWA,EAAOI,QAErB,kBAAC,KAAD,CAAUhW,GAAG,cAIZ4V,EAAOA,QAAUA,EAAOI,QAEzB,kBAAC,KAAD,CAAUhW,GAAG,aAKb,kBAACiT,GAAD,KACI,kBAACyC,EAAD,MACA,kBAAC1C,GAAD,KACI,qCACA,kBAAC,KAAD,iBACQc,GADR,CAEI7E,KAAK,QACL2F,cAAe,CACXC,UAAU,GAEd9C,SApDA,4CAqDA+C,eA3BG,SAAAC,GACnBtW,QAAQC,IAAI,UAAWqW,MA4BP,kBAAC,KAAK/F,KAAN,CACIgD,MAAM,QACN/C,KAAK,QACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,8BAIjB,kBAAC,KAAD,OAGJ,kBAAC,KAAKnD,KAAN,CACIgD,MAAM,WACN/C,KAAK,WACLgD,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAIjB,kBAAC,KAAM8C,SAAP,OAGJ,kBAAC,KAAKjG,KAASsF,GACX,kBAAC,IAAD,CAAQlC,KAAK,UAAUC,SAAS,UAAhC,eChBb4D,GAnFO,WAAO,IAAD,EACU/W,oBAAS,GADnB,mBACjBoL,EADiB,KACNC,EADM,KAEpBoJ,EAASuC,eAAYrC,IAFD,4CAIxB,WAAwBN,GAAxB,mBAAAlT,EAAA,6DACI5B,QAAQC,IAAI6U,GADhB,SAEiCG,GAAiBC,EAAQJ,GAF1D,gBAEUxS,EAFV,EAEUA,KAAMC,EAFhB,EAEgBA,OACZvC,QAAQC,IAAR,gBAAqBqC,EAArB,qBAAsCC,IACvB,MAAXA,IACAvC,QAAQC,IAAI,mBACZ6L,GAAa,IANrB,4CAJwB,sBAmBxB,OAhBA9L,QAAQC,IAAIiV,GAgBRrJ,EAEI,kBAAC,KAAD,CAAUtK,GAAG,MAMb,kBAACiT,GAAD,KACI,kBAACD,GAAD,KACI,kBAAC,KAAD,CACIc,OAAO,WACP/B,SA/BI,4CAgCJ+C,eAjBpB,SAAwBvB,GACpB9U,QAAQC,IAAI,2BAmBI,kBAAC,KAAKsQ,KAAN,CACIgD,MAAM,WACN/C,KAAK,WACL+F,aAAW,EACX/C,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAIjB,kBAAC,KAAM8C,SAAP,OAEJ,kBAAC,KAAKjG,KAAN,CACIgD,MAAM,mBACN/C,KAAK,mBACLiG,aAAc,CAAC,YACfF,aAAW,EACX/C,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,+BACV,gBAAGgD,EAAH,EAAGA,cAAH,MAAwB,CACvBC,UADuB,SACbC,EAAM7W,GACZ,OAAKA,GAAS2W,EAAc,cAAgB3W,EAIrC8W,QAAQC,OAAO,oDAHXD,QAAQE,eAS/B,kBAAC,KAAMP,SAAP,OAEJ,kBAAC,IAAD,CAAQ7C,KAAK,UAAUC,SAAS,UAAhC,cChDT8D,GA1BM,SAAClX,GAGlB,IAAM2W,EAAS/W,IAITuX,EADYR,EAAOI,UAC8C,gBAA/BrX,KAAKC,UAAUK,EAAM0T,OAG7D,OAAIiD,EAAOA,QAAUQ,EAGb,kBAAC,KAAD,CAAOzD,KAAM1T,EAAM0T,MACd1T,EAAMK,UAOX,kBAAC,KAAD,CAAUU,GAAG,YCwFVqW,GA/FD,WAEKxX,IAAf,IACMO,EAAUL,IAHA,SAKDuX,EALC,gFAKhB,WAA6BC,EAAOnD,GAApC,qBAAA/S,EAAA,6DACQoK,EAAW,CACX,QAAW8L,GAFnB,SAK2B9V,MAAM,GAAD,OAAIlB,EAAJ,qBAAiC,CACzDmB,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBQ,KAAMxC,KAAKC,UAAU6L,GACrB4I,OAAQD,EAAWC,SAX3B,cAKUxS,EALV,gBAcqBA,EAASC,OAd9B,cAcQC,EAdR,gBAeuBF,EAASG,OAfhC,cAeQA,EAfR,yBAiBW,CAAE,KAAQD,EAAM,OAAUC,IAjBrC,6CALgB,sBA6DhB,OAnCAiH,qBAAU,WAEN,IAAM6N,EAAkB,IAAIC,gBAFhB,4CAIZ,kCAAA1V,EAAA,yDACiD,OAAzChC,aAAaC,QAAQ,gBAD7B,gBAGQc,EAAQ,CAAE,QAAU,EAAO,SAAW,IAH9C,8BAMYmX,EAAQlY,aAAaC,QAAQ,gBACjCc,EAAQ,CAAE,QAAU,EAAM,SAAW,IAP7C,SAQqCkX,EAAcC,EAAOT,GAR1D,gBAQc/U,EARd,EAQcA,KAAMC,EARpB,EAQoBA,OAKR5B,EAHW,MAAX4B,EAGQ,CAAE,QAAU,EAAM,QAAWD,EAAKiV,SAIlC,CAAE,QAAU,EAAO,SAAW,IAjBlD,6CAJY,sBA4BZ,OA5BY,mCA0BZQ,GAEQ,WACJV,EAAgBW,WAGrB,IAIC,kBAAC,IAAD,KAII,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO9D,KAAK,aACR,kBAAC,GAAD,OAKJ,kBAAC,KAAD,CAAOA,KAAK,UACR,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAcA,KAAK,YACf,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAcA,KAAK,aACf,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,wBACR,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,UCnGQxU,IAAMC,cAAc,CAAE,QAAU,EAAO,SAAW,IAmB/DsY,OAhBf,WAME,OACE,yBAAK9W,UAAU,iBACb,kBAAC,EAAD,KACE,kBAAC,GAAD,SCLY+W,QACW,cAA7BzO,OAAOuL,SAASmD,UAEe,UAA7B1O,OAAOuL,SAASmD,UAEhB1O,OAAOuL,SAASmD,SAASrE,MACvB,2DCZNsE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,MADF,KAGAhR,SAASiR,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/Y,QAAQ+Y,MAAMA,EAAMrF,c","file":"static/js/main.b0e6cbd4.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\r\n\r\n\r\nconst AuthContext = React.createContext({ 'isAuth': localStorage.getItem('refreshToken') === null ? false : true, 'manager': false })\r\nconst UpdateAuthContext = React.createContext((value) => {\r\n    console.log(`shouldnt be here: ${JSON.stringify(value)}`)\r\n})\r\n\r\nexport function useAuth() {\r\n\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function useAuthUpdate() {\r\n\r\n    return useContext(UpdateAuthContext)\r\n\r\n}\r\n\r\nexport const AuthProvider = (props) => {\r\n    const [auth, setAuth] = useState({ 'isAuth': false, 'manager': false })\r\n    function updateAuth(value) {\r\n        setAuth(value)\r\n    }\r\n\r\n    return (\r\n\r\n        <AuthContext.Provider value={auth}>\r\n            <UpdateAuthContext.Provider value={updateAuth}>\r\n                {props.children}\r\n            </UpdateAuthContext.Provider>\r\n        </AuthContext.Provider>\r\n\r\n    )\r\n\r\n}","\r\nexport const API_HOST = 'http://localhost:8000';","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd'\r\nimport 'antd/dist/antd.css'\r\n\r\nexport const NavButton = styled.button`\r\nfont-family: \"Montserrat\", sans-serif;\r\nfont-size: 20px;\r\npadding:0;\r\n`;\r\n","import React from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport '../components/employeeComponents/employeeStyles/employee.css'\r\nimport { NavButton } from '../styles/nav'\r\n\r\nconst LandingNav = () => {\r\n    console.log('hello')\r\n    return (\r\n        <nav>\r\n            <ul className={'nav-list'}>\r\n                <li id={'common'} style={{ marginRight: 'auto' }}>\r\n                    <Link to=\"/\"><NavButton color='primary'>Home</NavButton></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/register/\"><NavButton>Register</NavButton></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/login/\"><NavButton>Login</NavButton></Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default LandingNav","import React from 'react';\r\nimport LandingNav from '../Landingnav'\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div>\r\n            <LandingNav />\r\n            <h1>\r\n                Home\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { getCookie } from './get_csrf'\r\nimport { API_HOST } from '../../settings'\r\n\r\nexport async function getFromServer(endpoint) {\r\n    const { refreshData, refreshStatus } = await refreshToken()\r\n    console.log(localStorage.getItem('accessToken'))\r\n    console.log(`refresh status: ${refreshStatus === 200}, ${refreshStatus}`)\r\n    if (refreshStatus === 200) {\r\n        const response = await fetch(`${API_HOST}/api/${endpoint}/`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('accessToken')}`\r\n            },\r\n            credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        const status = await response.status;\r\n        console.log(`this is the response json: ${JSON.stringify(data)}`)\r\n        return { 'data': data, 'status': status };\r\n    }\r\n    else {\r\n        return { \"data\": refreshData, \"status\": refreshStatus }\r\n    }\r\n}\r\n\r\nexport async function sendPostRequest(_data, endpoint) {\r\n    const { refreshData, refreshStatus } = await refreshToken()\r\n    if (refreshStatus === 200) {\r\n        const response = await fetch(`${API_HOST}/api/${endpoint}/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('accessToken')}`\r\n            },\r\n            body: JSON.stringify(_data),\r\n            credentials: 'include',\r\n        })\r\n        const data = await response.json();\r\n        const status = await response.status\r\n        console.log(`this is the response ${JSON.stringify(data)}`)\r\n        return { \"data\": data, \"status\": status }\r\n    }\r\n    else {\r\n        return { \"data\": refreshData, \"status\": refreshStatus }\r\n    }\r\n}\r\nexport async function sendDeleteRequest(pk, endpoint) {\r\n    const { refreshData, refreshStatus } = await refreshToken()\r\n    if (refreshStatus === 200) {\r\n        console.log(`this is pk ${pk}`)\r\n        const response = await fetch(`${API_HOST}/api/${endpoint}/${pk}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('accessToken')}`\r\n            },\r\n            // body: JSON.stringify(_data),\r\n            credentials: 'include',\r\n        })\r\n        const data = await response.json();\r\n        const status = await response.status\r\n        console.log(`this is the response ${JSON.stringify(data)}`)\r\n        return { \"data\": data, \"status\": status }\r\n    }\r\n    else {\r\n        return { \"data\": refreshData, \"status\": refreshStatus }\r\n    }\r\n}\r\n\r\n\r\nexport async function refreshToken() {\r\n    const refresh = {\r\n        \"refresh\": localStorage.getItem('refreshToken')\r\n    }\r\n    const response = await fetch(`${API_HOST}/token/refresh/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n        },\r\n        body: JSON.stringify(refresh),\r\n    })\r\n\r\n    const data = await response.json();\r\n    const status = await response.status\r\n\r\n    localStorage.setItem('accessToken', data.access)\r\n    localStorage.setItem('refreshToken', data.refresh)\r\n    console.log(`status: ${status}, bool? ${status === 200}`)\r\n\r\n    return { \"refreshData\": data, \"refreshStatus\": status }\r\n\r\n}","import styled from 'styled-components'\r\n\r\nexport const EmployeeList = styled.div`\r\n    // margin-right: 80vw;\r\n    // width: 20vw;\r\n    height: 100%;\r\n`\r\n\r\nexport const TestShiftBlock = styled.div`\r\n    position: absolute;\r\n    zIndex: 10;\r\n    border - radius: 5px;\r\n    opacity: '0.9';\r\n    position: absolute; e\r\n    float: left\r\n    top: ${props => props.styledtop || 50};\r\n    height: ${props => props.styledheight || 50};\r\n    left: ${props => props.styledleft || 50};\r\n    width: ${props => props.styledwidth || 50};\r\n    background-color: ${ props => props.styledhover ? '#ffa384' : '#74BDCB'}\r\n    box-shadow: ${props => props.styledhover ? '2px 4px' : ''};\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TimeBlock = (props) => {\r\n\r\n\r\n    return (\r\n        <div className='time-block'>\r\n            {props.time}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeBlock","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst AvailabilityBlock = styled.div`\r\nposition: absolute;\r\nz-index: 1;\r\nborder-radius: 5px;\r\nopacity: 0.9;\r\ntop: ${props => props.divTop};\r\nleft: ${props => props.divLeft};\r\nheight: ${props => props.divHeight};\r\nwidth:${props => props.divWidth};\r\ncursor: ${props => props.divCursorStyle};\r\nbackground-color: #835b32;\r\n\r\nbox-shadow: 2px 4px;\r\n\r\n// transition: box-shadow 0.3s ease;\r\n`\r\nconst EmployeeShiftBlock = (props) => {\r\n\r\n\r\n    const [cursorStyle, setCursorStyle] = useState('grab')\r\n\r\n    function onMouseMove(event) {\r\n        let borderSize = 10\r\n        let mousePositionY = event.clientY\r\n\r\n        let shiftBox = event.target.getBoundingClientRect()\r\n        let topBorder = shiftBox.top\r\n        let bottomBorder = shiftBox.bottom\r\n\r\n\r\n        if (mousePositionY < topBorder + borderSize || mousePositionY > bottomBorder - borderSize) {\r\n\r\n            if (cursorStyle !== 'n-resize') {\r\n                setCursorStyle('n-resize')\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (cursorStyle !== 'grab') {\r\n                setCursorStyle('grab')\r\n            }\r\n        }\r\n    }\r\n    function handleDoubleClick() {\r\n        props.deleteShift(props.data.day, props.data.id)\r\n    }\r\n\r\n    function handleOnMouseDown(event) {\r\n        if (cursorStyle === 'n-resize') {\r\n            let mousePositionY = event.clientY\r\n            props.changeShiftTime(mousePositionY, props.data)\r\n        }\r\n        else {\r\n            let mousePositionY = event.clientY\r\n            setCursorStyle('grabbing')\r\n            props.moveShift(mousePositionY, props.data)\r\n        }\r\n    }\r\n\r\n    var myStyle = {}\r\n    if (typeof (props.styles) !== \"undefined\") {\r\n        myStyle = {\r\n            top: `${props.styles.top}px`,\r\n            height: `${props.styles.height}px`,\r\n            left: `${props.styles.left}px`,\r\n            width: `${props.styles.width}px`,\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AvailabilityBlock\r\n                onMouseMove={onMouseMove}\r\n                onMouseDown={handleOnMouseDown}\r\n                onDoubleClick={handleDoubleClick}\r\n                divHeight={myStyle.height}\r\n                divTop={myStyle.top}\r\n                divLeft={myStyle.left}\r\n                divWidth={myStyle.width}\r\n                divCursorStyle={cursorStyle}\r\n            // onMouseDown={handleMouseDown}\r\n            >\r\n\r\n                <p>{props.data.start_time} - {props.data.end_time}</p>\r\n\r\n            </AvailabilityBlock >\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default EmployeeShiftBlock","import React, { useState, useEffect, useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport EmployeeShiftBlock from './EmployeeShiftBlock'\r\n\r\n\r\nconst AvailabilityBlock = styled.div`\r\nposition: absolute;\r\nz-index: 1;\r\nborder-radius: 5px;\r\nopacity: 0.9;\r\ntop: ${props => props.divTop};\r\nleft: ${props => props.divLeft};\r\nheight: ${props => props.divHeight};\r\nwidth:${props => props.divWidth};\r\nbackground-color: #74BDCB;\r\n&:hover{\r\n    background-color: #ffa384;\r\n    box-shadow: 2px 4px;\r\n\r\n}\r\ntransition: all 0.3s ease;\r\n`\r\n\r\n\r\nconst EmployeeAvailabilityBlock = (props) => {\r\n    var shortID = require('shortid')\r\n    function createID() {\r\n        return shortID.generate()\r\n    }\r\n\r\n    const [mouseHover, setHover] = useState(false)\r\n    const timeRefsArray = props.timeRefs.current\r\n    const employeeID = props.employee\r\n    const [shiftStyles, setStyles] = useState([])\r\n    var myStyle = {};\r\n    if (typeof (props.styles) !== \"undefined\") {\r\n        myStyle = {\r\n            top: `${props.styles.top}px`,\r\n            height: `${props.styles.height}px`,\r\n            left: `${props.styles.left}px`,\r\n            width: `${props.styles.width}px`,\r\n        }\r\n\r\n    }\r\n\r\n    function handleMouseDown(event) {\r\n        const shiftID = createID()\r\n        let mousePositionY = event.clientY\r\n        let timeDivElement = timeRefsArray[getTimeRefIndexFromMousePosition(mousePositionY)]\r\n        if (timeDivElement !== -1) {\r\n\r\n            function cleanEventListerners() {\r\n                document.removeEventListener('mouseup', cleanEventListerners) //Remove event listener after function executes one time\r\n                document.removeEventListener('mousemove', callHandleMouseMove)\r\n            }\r\n            function callHandleMouseMove(event) {\r\n                let mousePositionY = event.clientY\r\n                handleMouseMove(mousePositionY, time, shiftID)\r\n            }\r\n\r\n            var time = timeDivElement.dataset.time\r\n            props.createNewShift(time, time, shiftID, props.data.day)\r\n            handleOnLoadOrReload()\r\n            document.addEventListener('mousemove', callHandleMouseMove)\r\n            document.addEventListener('mouseup', cleanEventListerners)\r\n\r\n        }\r\n    }\r\n\r\n    function handleMouseMove(mousePositionY, fixedTime, id) {\r\n        let endMousePositionY = mousePositionY\r\n        let endMouseIndex = getTimeRefIndexFromMousePosition(endMousePositionY)\r\n        if (endMouseIndex >= 0) {\r\n            let endMouseRef = timeRefsArray[endMouseIndex]\r\n            let endMouseTime = endMouseRef.dataset.time\r\n            if (endMouseTime > fixedTime) { //can do direct string comparison for hh:mm if in 24hr clock\r\n                props.changeShift(fixedTime, endMouseTime, id, props.data.day)\r\n            }\r\n            else {\r\n                props.changeShift(endMouseTime, fixedTime, id, props.data.day)\r\n            }\r\n        }\r\n    }\r\n\r\n    //returns timeRef within borders of availability\r\n    function getTimeRefIndexFromMousePosition(mousePositionY) {\r\n        let timeIndex = -1\r\n\r\n        let topBorderTime = props.data.start_time\r\n        let bottomBorderTime = props.data.end_time\r\n\r\n        let topBorderIndex = findIndexFromTime(topBorderTime)\r\n        let bottomBorderIndex = findIndexFromTime(bottomBorderTime)\r\n\r\n        for (let i = 0; i < timeRefsArray.length; i++) {\r\n            let timeBlockTopPositionY = timeRefsArray[i].getBoundingClientRect().top;\r\n            if (mousePositionY > timeBlockTopPositionY && (i <= bottomBorderIndex && i >= topBorderIndex)) {\r\n                timeIndex = i\r\n            }\r\n        }\r\n        //has key of time refs array\r\n        //now need to get once on click, create a new shift of styles x at position wtv.\r\n        //should separate but now i have position + values using innerText\r\n        return timeIndex\r\n    }\r\n\r\n    function handleMouseEnter() {\r\n        setHover(true)\r\n    }\r\n    function handleMouseLeave() {\r\n        setHover(false)\r\n    }\r\n\r\n    function findIndexFromTime(time) {\r\n        for (let i = 0; i < timeRefsArray.length; i++) {\r\n            if (timeRefsArray[i].dataset.time === time) {\r\n                return i\r\n            }\r\n        }\r\n        return -1\r\n    }\r\n\r\n    function changeShiftTime(mousePosition, shiftData) {\r\n        let mousePositionY = mousePosition\r\n\r\n        let timeIndex = getTimeRefIndexFromMousePosition(mousePositionY, timeRefsArray)\r\n        let mousePositionTime = timeRefsArray[timeIndex].dataset.time\r\n\r\n        let fixedTime = shiftData.start_time\r\n\r\n        if (mousePositionTime === shiftData.start_time) {\r\n            fixedTime = shiftData.end_time\r\n        }\r\n\r\n        function callHandleMouseMove(event) {\r\n            let mousePositionY = event.clientY\r\n            handleMouseMove(mousePositionY, fixedTime, shiftData.id)\r\n        }\r\n        function cleanUpEventListeners() {\r\n            document.removeEventListener('mouseup', cleanUpEventListeners)\r\n            document.removeEventListener('mousemove', callHandleMouseMove)\r\n        }\r\n        document.addEventListener('mousemove', callHandleMouseMove)\r\n        document.addEventListener('mouseup', cleanUpEventListeners)\r\n    }\r\n\r\n    function moveShift(mousePositionY, shiftData) {\r\n\r\n        // gives initial mouse position\r\n        let initialMousePosition = mousePositionY\r\n        let initialIndex = getTimeRefIndexFromMousePosition(initialMousePosition)\r\n        // event listener on mouse move\r\n        function moveShiftMouseMove(event) {\r\n            let newMousePositionY = event.clientY\r\n            let newIndex = getTimeRefIndexFromMousePosition(newMousePositionY)\r\n\r\n            let netIndex = newIndex - initialIndex\r\n\r\n            let startIndex = findIndexFromTime(shiftData.start_time) //MAYBE CAN USE DATASET INSTEAD OF THIS FUNCTION NOW\r\n            let endIndex = findIndexFromTime(shiftData.end_time)\r\n\r\n            let startBorderTime = props.data.start_time\r\n            let endBorderTime = props.data.end_time\r\n\r\n            let startBorderIndex = findIndexFromTime(startBorderTime)\r\n            let endBorderIndex = findIndexFromTime(endBorderTime)\r\n\r\n            let newStartIndex = startIndex + netIndex\r\n            let newEndIndex = endIndex + netIndex\r\n            if (newStartIndex >= startBorderIndex && newEndIndex <= endBorderIndex) {\r\n                let newStartTime = timeRefsArray[newStartIndex].dataset.time\r\n                let newEndTime = timeRefsArray[newEndIndex].dataset.time\r\n                props.changeShift(newStartTime, newEndTime, shiftData.id, shiftData.day)\r\n                handleOnLoadOrReload()\r\n            }\r\n\r\n        }\r\n        function cleanUpMoveShift() {\r\n            document.removeEventListener('mouseup', cleanUpMoveShift)\r\n            document.removeEventListener('mousemove', moveShiftMouseMove)\r\n        }\r\n\r\n        document.addEventListener('mousemove', moveShiftMouseMove)\r\n        document.addEventListener('mouseup', cleanUpMoveShift)\r\n    }\r\n\r\n\r\n\r\n    function generateShiftHeight(shift) {\r\n        let startTime = shift.start_time\r\n        let endTime = shift.end_time\r\n        let startIndex = findIndexFromTime(startTime)\r\n        let endIndex = findIndexFromTime(endTime)\r\n        // finds start and end indices (should be it's own function)\r\n\r\n        if (startIndex < 0 || endIndex < 0) {\r\n            console.log(`day ${props.id} has no shifts to add or something went wrong!`)\r\n            return []\r\n        }\r\n        else {\r\n            let shiftsPositions = [] //Should change name here\r\n            let start_timeComponent = timeRefsArray[startIndex]\r\n            let end_timeComponent = timeRefsArray[endIndex]\r\n            let startPosition = start_timeComponent.offsetTop\r\n            let endPosition = end_timeComponent.offsetTop + end_timeComponent.offsetHeight\r\n            let left = start_timeComponent.offsetLeft\r\n            let width = start_timeComponent.offsetWidth\r\n            let height = endPosition - startPosition\r\n            shiftsPositions = [startPosition, height, left, width]\r\n\r\n            return shiftsPositions\r\n        }\r\n    }\r\n\r\n    function handleOnLoadOrReload() {\r\n        var shiftStyles = []\r\n        if (props.shifts.length > 0) {\r\n            for (let i = 0; i < props.shifts.length; i++) {\r\n                const stylesArray = generateShiftHeight(props.shifts[i], timeRefsArray)\r\n                let top = stylesArray[0] //generate shift array re-generates the styles for all the shifts on this day!!!\r\n                let height = stylesArray[1]// thats why it returns a nested array\r\n                let left = stylesArray[2]\r\n                let width = stylesArray[3]\r\n                let shiftStyle = {\r\n                    height: height,\r\n                    top: top,\r\n                    left: left,\r\n                    width: width\r\n                }\r\n                shiftStyles.push(shiftStyle)\r\n            }\r\n        }\r\n        setStyles(shiftStyles)\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleOnLoadOrReload()\r\n        window.addEventListener('resize', handleOnLoadOrReload)\r\n        return (() => {\r\n            window.removeEventListener('resize', handleOnLoadOrReload) //Clean up event listener\r\n        })\r\n    }, [props.shifts])\r\n\r\n    return (\r\n        <div>\r\n            <AvailabilityBlock\r\n                divHeight={myStyle.height}\r\n                divTop={myStyle.top}\r\n                divLeft={myStyle.left}\r\n                divWidth={myStyle.width}\r\n                onMouseDown={handleMouseDown}>\r\n\r\n                <p>{props.data.start_time} - {props.data.end_time}</p>\r\n\r\n            </AvailabilityBlock>\r\n\r\n            {\r\n                props.shifts.map((data, idx) => {\r\n                    return (\r\n                        <EmployeeShiftBlock\r\n                            key={idx}\r\n                            data={data}\r\n                            styles={shiftStyles[idx]}\r\n                            moveShift={moveShift}\r\n                            changeShiftTime={changeShiftTime}\r\n                            deleteShift={props.deleteShift}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EmployeeAvailabilityBlock","import styled from 'styled-components'\r\nimport { Button } from 'antd'\r\n\r\nexport const DayBlockContainer = styled.div`\r\nborder-left: 1px solid black;\r\ndisplay: grid;\r\ngrid-template-rows: auto;\r\nbox-sizing: border-box;\r\nborder-collapse: collapse;\r\ntransition: all 2s;\r\n`;\r\n\r\nexport const WeekBlockContainer = styled.div`\r\ndisplay: grid;\r\nwidth: 80vw;\r\nheight: auto;\r\ngrid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\nbox-sizing: border-box;\r\nborder-collapse: collapse;\r\n`\r\n\r\nexport const AvailabilityContainer = styled.div`\r\ndisplay: flex;\r\nmax-width: 100%;\r\nmargin: 10px 10px 10px 10px;\r\n`\r\nexport const Day = styled.div`\r\nheight: 30px;\r\nbackground-color:#74BDCB;\r\n\r\n`\r\n\r\nexport const SubmitShiftsButton = styled(Button)`\r\n    size:30px;\r\n    width: 100%;\r\n`","import React, { useState, useEffect, useRef, useMemo } from 'react'\r\nimport TimeBlock from '../../../calendarComponents/TimeBlock'\r\nimport EmployeeAvailabilityBlock from './EmployeeAvailabilityBlock'\r\n\r\nimport { Day } from '../../../employeeComponents/employeeStyles/availabilityStyles'\r\n\r\nconst ShiftDayBlock = (props) => {\r\n\r\n    // Shift day block should still receive shifts(availabilities)\r\n    // To create shifts, should have handlers on the shift component\r\n    // Lets have template only worry about rendering shifts\r\n\r\n    var shortID = require('shortid')\r\n    function createID() {\r\n        return shortID.generate()\r\n    }\r\n\r\n    const timeRefsArray = useRef([])\r\n    const [styles, setStyles] = useState([])\r\n\r\n    function getTimeIndexFromMousePosition(mousePositionY) {\r\n        let timeIndex = -1\r\n\r\n        for (let i = 0; i < timeRefsArray.current.length; i++) {\r\n            let timeBlockTopPositionY = timeRefsArray.current[i].offsetTop\r\n            // let timeBlockBottomPositionY = timeBlockTopPositionY + timeRefsArray.current[i].offsetHeight\r\n            if (mousePositionY > timeBlockTopPositionY) {\r\n                timeIndex = i\r\n            }\r\n        }\r\n        return timeIndex\r\n    }\r\n\r\n\r\n    // Given time and time Array, find the index where the time is located\r\n    // Returns negative number if the time is not in the Times array\r\n    function findTimeIndex(time, timesArray) {\r\n\r\n        let index = -1\r\n        for (let i = 0; i < timesArray.length; i++) {\r\n            if (timesArray[i] === time) {\r\n                index = i\r\n            }\r\n\r\n        }\r\n        return index\r\n    }\r\n\r\n    function generateShiftHeight(shift, timeArray) {\r\n        let startIndex = -1\r\n        let endIndex = -1\r\n        // finds start and end indices (should be it's own function)\r\n        if (shift.day === props.id) {\r\n            startIndex = findTimeIndex(shift.start_time, timeArray)\r\n            endIndex = findTimeIndex(shift.end_time, timeArray)\r\n\r\n        }\r\n\r\n        if (startIndex < 0 || endIndex < 0) {\r\n            console.log(`day ${props.id} has no shifts to add or something went wrong!`)\r\n            return []\r\n        }\r\n        else {\r\n            let shiftsPositions = [] //Should change name here\r\n            let start_timeComponent = timeRefsArray.current[startIndex]\r\n            let end_timeComponent = timeRefsArray.current[endIndex]\r\n            let startPosition = start_timeComponent.offsetTop\r\n            let endPosition = end_timeComponent.offsetTop + end_timeComponent.offsetHeight\r\n            let left = start_timeComponent.offsetLeft\r\n            let width = start_timeComponent.offsetWidth\r\n            let height = endPosition - startPosition\r\n            shiftsPositions = [startPosition, height, left, width]\r\n\r\n\r\n            return shiftsPositions\r\n        }\r\n    }\r\n\r\n    function handleOnLoadOrReload() {\r\n        var shiftStyles = []\r\n        if (props.availabilities.length > 0) {\r\n            for (let i = 0; i < props.availabilities.length; i++) {\r\n                const stylesArray = generateShiftHeight(props.availabilities[i], times, timeRefsArray)\r\n                let top = stylesArray[0] //generate shift array re-generates the styles for all the shifts on this day!!!\r\n                let height = stylesArray[1]// thats why it returns a nested array\r\n                let left = stylesArray[2]\r\n                let width = stylesArray[3]\r\n                let shiftStyle = {\r\n                    height: height,\r\n                    top: top,\r\n                    left: left,\r\n                    width: width\r\n                }\r\n                shiftStyles.push(shiftStyle)\r\n            }\r\n        }\r\n        setStyles(shiftStyles)\r\n    }\r\n\r\n    // Time array holding each timeblock where difference between each time block depends on specification\r\n    const times = props.timesArr\r\n\r\n    useEffect(() => {\r\n        handleOnLoadOrReload()\r\n        window.addEventListener('resize', handleOnLoadOrReload)\r\n        return (() => {\r\n            window.removeEventListener('resize', handleOnLoadOrReload) //Clean up event listener\r\n        })\r\n    }, [props.availabilities])\r\n\r\n\r\n    return (\r\n        // <div onMouseDown={handleOnMouseDownCreateShift} className='day-block'  >\r\n        <div className='day-block'  >\r\n            <Day><p>{props.day}: <strong>{props.weekDate}</strong></p></Day>\r\n            {\r\n                times.map((data, idx) => {\r\n                    return (\r\n                        <div key={idx} data-day={props.day} data-time={data} ref={el => { timeRefsArray.current[idx] = el; }}>\r\n\r\n                            <TimeBlock\r\n\r\n                                id={idx}\r\n                                // mouseDown={props.mouseDown}\r\n                                time={data}\r\n                            // day={props.id}\r\n                            />\r\n\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n            }\r\n            {\r\n                props.availabilities.map((data, idx) => {\r\n                    return (\r\n                        <EmployeeAvailabilityBlock\r\n                            employee={props.employee}\r\n                            shifts={props.shifts}\r\n                            key={idx}\r\n                            data={data}\r\n                            styles={styles[idx]}\r\n                            timeRefs={timeRefsArray}\r\n                            createNewShift={props.createNewShift}\r\n                            changeShift={props.changeShift}\r\n                            deleteShift={props.deleteShift}\r\n                        // changeShiftTime={changeShiftTime}\r\n                        // moveShift={moveShift}\r\n                        // handleDeleteShift={props.handleDeleteShift} \r\n                        />\r\n                    )\r\n\r\n                })\r\n            }\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ShiftDayBlock","import React, { useState, useEffect, useMemo } from 'react';\r\nimport AvailabilityDayBlock from '../../calendarComponents/AvailabilityDayBlock'\r\nimport ShiftDayBlock from '../manager/SetShiftsComponents/ShiftDayBlock'\r\nimport { getFromServer } from '../../helperFunctions/api'\r\nimport { sendPostRequest } from '../../helperFunctions/api'\r\nimport {\r\n    DayBlockContainer,\r\n    WeekBlockContainer,\r\n    AvailabilityContainer,\r\n    SubmitShiftsButton\r\n} from '../../employeeComponents/employeeStyles/availabilityStyles'\r\nimport {\r\n    computeTimeArray,\r\n} from '../../helperFunctions/AvailabilityDayBlockHelpers'\r\n// import getCsrfToken from './helperFunctions/get_csrf'\r\n\r\nexport const SubmittedContext = React.createContext(false)\r\n\r\nconst Availability = () => {\r\n    useEffect(() => {\r\n        console.log(`local storage: ${localStorage.getItem('accessToken')}`)\r\n    }, [])\r\n    var date = new Date()\r\n    var weekStartDay = date.getDate() - date.getDay() + 7\r\n    // USE useEffect TO INITIALIZE SHIFTS\r\n    // uses indexes of array as holders for which day\r\n    // Therefore, use effect must return list of 7 object\r\n    // !!! maybe want to use a different implementation. Nested objects still viable\r\n    const API_HOST = 'http://localhost:8000';\r\n    let _csrfToken = null\r\n    const [submitted, setSubmitted] = useState(false)\r\n    const [shifts, setShifts] = useState([[], [], [], [], [], [], []])\r\n    const [times, setTimes] = useState([\r\n        { 'day': 'Sunday', 'start': '12:00', 'end': '23:00', 'id': 0 },\r\n        { 'day': 'Monday', 'start': '12:00', 'end': '23:00', 'id': 1 },\r\n        { 'day': 'Tuesday', 'start': '12:00', 'end': '23:00', 'id': 2 },\r\n        { 'day': 'Wednesday', 'start': '12:00', 'end': '23:00', 'id': 3 },\r\n        { 'day': 'Thursday', 'start': '12:00', 'end': '23:00', 'id': 4 },\r\n        { 'day': 'Friday', 'start': '12:00', 'end': '23:00', 'id': 5 },\r\n        { 'day': 'Saturday', 'start': '12:00', 'end': '23:00', 'id': 6 },\r\n\r\n\r\n    ])\r\n\r\n    const timeIntervals = 30\r\n\r\n    async function handleSubmitAvailabilities() {\r\n        const postData = shifts.flat()\r\n        console.log(`this is data: ${JSON.stringify(postData)}`)\r\n        const { data, status } = await sendPostRequest(postData, 'availability')\r\n        if (status === 201) {\r\n\r\n            setSubmitted(true)\r\n\r\n        }\r\n        else {\r\n            console.log(`avail status: ${status}`)\r\n        }\r\n        console.log(`postDAta: ${JSON.stringify(data)}, post status: ${status}`)\r\n    }\r\n    useEffect(() => {\r\n        async function initializeShifts() {\r\n            let { data, status } = await getFromServer('availability')\r\n            if (status === 200) {\r\n                let newShiftArray = [...shifts]\r\n                //DEEP COPY shifts state\r\n                for (let i = 0; i < newShiftArray.length; i++) {\r\n                    newShiftArray[i] = [...shifts[i]]\r\n                }\r\n                //populate new state with API response\r\n                for (let i = 0; i < data.length; i++) {\r\n                    let shiftObject = data[i]\r\n                    newShiftArray[shiftObject.day].push(shiftObject)\r\n                }\r\n                setShifts(newShiftArray)\r\n            }\r\n        }\r\n        initializeShifts()\r\n    }, [])\r\n\r\n    function handleCreateShift(day, start_time, end_time, id) {\r\n        // Crete new array using previous state\r\n        console.log(`TYPE: ${(shifts)} `)\r\n        let newShifts = [...shifts]\r\n        for (let i = 0; i < newShifts.length; i++) {\r\n            newShifts[i] = shifts[i]\r\n        }\r\n        let newShift = { 'day': day, 'start_time': start_time, 'end_time': end_time, 'id': id } //new shift object\r\n        newShifts[day].push(newShift) //Add shift to list of shifts for it's given day where\r\n        //days are identified by array index\r\n        setShifts(newShifts)\r\n        setSubmitted(false)\r\n    }\r\n    function handleDeleteShift(day, id) {\r\n        let newShiftArray = [...shifts]\r\n        //DEEP COPY shifts state\r\n        for (let i = 0; i < newShiftArray.length; i++) {\r\n            newShiftArray[i] = [...shifts[i]]\r\n        }\r\n\r\n        for (let i = 0; i < newShiftArray[day].length; i++) {\r\n            if (newShiftArray[day][i].id === id) {\r\n                newShiftArray[day].splice(i, 1) //removes shift/availability from array\r\n            }\r\n        }\r\n        setShifts(newShiftArray)\r\n        setSubmitted(false)\r\n    }\r\n    function changeShift(day, id, start_time, end_time) {\r\n        const updatedShifts = [...shifts] // copy of prev state\r\n        console.log(`prev state: ${updatedShifts}`)\r\n        let dayShifts = updatedShifts[day] //Gets the array of shifts for that given day\r\n\r\n        let shiftIndex = dayShifts.findIndex(shift => shift.id === id)\r\n        let updatedShift = { 'day': day, 'start_time': start_time, 'end_time': end_time, 'id': id }\r\n        dayShifts[shiftIndex] = updatedShift\r\n        setShifts(updatedShifts)\r\n        setSubmitted(false)\r\n    }\r\n\r\n    const timesArray = useMemo(() => {\r\n        return computeTimeArray(times[0].start, times[0].end, timeIntervals)\r\n    }, [times[0].start, times[0].end])\r\n    return (\r\n        <div>\r\n            <AvailabilityContainer>\r\n                {/* <div className='day-time-container'>\r\n                <form>\r\n                    {times.map(data => {\r\n                        return (\r\n                            <DayTime\r\n                                day={data.day}\r\n                                key={data.id}\r\n                            />\r\n                        )\r\n                    })}\r\n                </form>\r\n            </div> */}\r\n\r\n                <SubmittedContext.Provider value={submitted}>\r\n                    <WeekBlockContainer>\r\n                        {times.map((data, idx) => {\r\n                            return (\r\n                                <DayBlockContainer color='primary' key={idx}>\r\n                                    <AvailabilityDayBlock\r\n                                        weekDate={weekStartDay + idx}\r\n                                        day={data.day}\r\n                                        start={data.start}\r\n                                        end={data.end}\r\n                                        id={data.id}\r\n                                        shifts={shifts[idx]}\r\n                                        timesArr={timesArray}\r\n                                        handleCreateShift={handleCreateShift}\r\n                                        changeShift={changeShift}\r\n                                        handleDeleteShift={handleDeleteShift}\r\n                                    />\r\n                                </DayBlockContainer>\r\n                            )\r\n                        }\r\n                        )}\r\n                    </WeekBlockContainer>\r\n                </SubmittedContext.Provider>\r\n            </AvailabilityContainer>\r\n            <SubmitShiftsButton onClick={handleSubmitAvailabilities}>Submit</SubmitShiftsButton>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Availability","import React, { useState, useContext } from 'react'\r\nimport { SubmittedContext } from '../pages/employeePages/Availability'\r\n\r\nconst AvailabilityBlock = (props) => {\r\n    const [cursorStyle, setCursorStyle] = useState('grab')\r\n    const [isResizing, setIsResizing] = useState(false)\r\n    const [canResize, setCanResize] = useState(false)\r\n    const submitted = useContext(SubmittedContext)\r\n    console.log(`this is submitted: ${submitted}`)\r\n    var myStyle = {\r\n        height: 0,\r\n        zIndex: 10,\r\n        backgroundColor: 'purple',\r\n        overflow: 'hidden',\r\n        borderRadius: '50px'\r\n\r\n    };\r\n    if (typeof (props.styles) !== \"undefined\") {\r\n        myStyle = {\r\n            position: 'absolute',\r\n            top: `${props.styles.top}px`,\r\n            height: `${props.styles.height}px`,\r\n            left: `${props.styles.left}px`,\r\n            width: `${props.styles.width}px`,\r\n            zIndex: 1,\r\n            backgroundColor: '#74BDCB',\r\n            cursor: cursorStyle,\r\n            borderRadius: '5px',\r\n            boxShadow: submitted ? '' : '2px 4px',\r\n            opacity: '0.9'\r\n        }\r\n\r\n    }\r\n\r\n    function handleDoubleClick() {\r\n        props.handleDeleteShift(props.data.day, props.data.id)\r\n\r\n    }\r\n\r\n\r\n    function onMouseMove(event) {\r\n        let borderSize = 10\r\n        let mousePositionY = event.clientY\r\n\r\n        let shiftBox = event.target.getBoundingClientRect()\r\n        let topBorder = shiftBox.top\r\n        let bottomBorder = shiftBox.bottom\r\n\r\n\r\n        if (mousePositionY < topBorder + borderSize || mousePositionY > bottomBorder - borderSize) {\r\n\r\n            if (cursorStyle !== 'n-resize') {\r\n                setCursorStyle('n-resize')\r\n            }\r\n        }\r\n        else {\r\n\r\n            if (cursorStyle !== 'grab') {\r\n                setCursorStyle('grab')\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnMouseDown(event) {\r\n        if (cursorStyle === 'n-resize') {\r\n            let mousePositionY = event.clientY\r\n            props.changeShiftTime(mousePositionY, props.data)\r\n        }\r\n        else {\r\n            let mousePositionY = event.clientY\r\n            setCursorStyle('grabbing')\r\n            props.moveShift(mousePositionY, props.data)\r\n        }\r\n    }\r\n    function handleOnMouseUp() {\r\n        if (cursorStyle === 'grabbing') {\r\n            setCursorStyle('grab')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseMove={onMouseMove}\r\n            onMouseDown={handleOnMouseDown}\r\n            onMouseUp={handleOnMouseUp}\r\n            style={myStyle}\r\n            className='shift-block'\r\n            onDoubleClick={handleDoubleClick} >\r\n            <p>{props.data.start_time} - {props.data.end_time}</p>\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default AvailabilityBlock","import React, { useState, useEffect, useRef, useMemo } from 'react'\r\nimport TimeBlock from './TimeBlock'\r\nimport AvailabilityBlock from './AvailabilityBlock'\r\nimport {\r\n    computeTimeArray,\r\n} from '../helperFunctions/AvailabilityDayBlockHelpers'\r\nimport { Day } from '../employeeComponents/employeeStyles/availabilityStyles'\r\n\r\nconst AvailabilityDayBlock = (props) => {\r\n\r\n    var shortID = require('shortid')\r\n\r\n    function createID() {\r\n        return shortID.generate()\r\n    }\r\n\r\n    const timeRefsArray = useRef([])\r\n    const [styles, setStyles] = useState([])\r\n\r\n    function handleOnMouseDownCreateShift(event) {\r\n\r\n        let startMousePositionY = event.clientY\r\n        const shiftID = createID()\r\n\r\n        let start_timeIndex = getTimeIndexFromMousePosition(startMousePositionY, timeRefsArray)\r\n        if (event.target.className !== 'time-block') {\r\n            console.log('didnt click on a time slot')\r\n        }\r\n        else {\r\n            function cleanEventListerners() {\r\n                document.removeEventListener('mouseup', cleanEventListerners) //Remove event listener after function executes one time\r\n                document.removeEventListener('mousemove', callHandleMouseMove)\r\n            }\r\n            function callHandleMouseMove(event) {\r\n                let mousePositionY = event.clientY\r\n                handleMouseMove(mousePositionY, times[start_timeIndex], shiftID)\r\n            }\r\n            props.handleCreateShift(props.id, times[start_timeIndex], times[start_timeIndex], shiftID)\r\n            handleOnLoadOrReload()\r\n            document.addEventListener('mousemove', callHandleMouseMove)\r\n            document.addEventListener('mouseup', cleanEventListerners)\r\n        }\r\n\r\n    }\r\n    function handleMouseMove(mousePositionY, fixedTime, id) {\r\n        let endMousePositionY = mousePositionY\r\n        let endMouseIndex = getTimeIndexFromMousePosition(endMousePositionY)\r\n        if (endMouseIndex >= 0) {\r\n            let endMouseTime = times[endMouseIndex]\r\n            if (endMouseTime > fixedTime) {\r\n                props.changeShift(props.id, id, fixedTime, endMouseTime)\r\n            }\r\n            else {\r\n                props.changeShift(props.id, id, endMouseTime, fixedTime)\r\n            }\r\n            handleOnLoadOrReload()\r\n        }\r\n    }\r\n    function getTimeIndexFromMousePosition(mousePositionY) {\r\n        let timeIndex = -1\r\n\r\n        for (let i = 0; i < timeRefsArray.current.length; i++) {\r\n            let timeBlockTopPositionY = timeRefsArray.current[i].getBoundingClientRect().top;\r\n            // let timeBlockBottomPositionY = timeBlockTopPositionY + timeRefsArray.current[i].offsetHeight\r\n            if (mousePositionY > timeBlockTopPositionY) {\r\n                timeIndex = i\r\n            }\r\n        }\r\n        return timeIndex\r\n    }\r\n\r\n    // Given time and time Array, find the index where the time is located\r\n    // Returns negative number if the time is not in the Times array\r\n    function findTimeIndex(time, timesArray) {\r\n\r\n        let index = -1\r\n        for (let i = 0; i < timesArray.length; i++) {\r\n            if (timesArray[i] === time) {\r\n                index = i\r\n            }\r\n\r\n        }\r\n        return index\r\n    }\r\n\r\n\r\n    function changeShiftTime(mousePosition, shiftData) {\r\n        let mousePositionY = mousePosition\r\n\r\n        let timeIndex = getTimeIndexFromMousePosition(mousePositionY, timeRefsArray)\r\n        let mousePositionTime = times[timeIndex]\r\n\r\n        let fixedTime = shiftData.start_time\r\n\r\n        if (mousePositionTime === shiftData.start_time) {\r\n            fixedTime = shiftData.end_time\r\n        }\r\n\r\n        function callHandleMouseMove(event) {\r\n            let mousePositionY = event.clientY\r\n            handleMouseMove(mousePositionY, fixedTime, shiftData.id)\r\n        }\r\n        function cleanUpEventListeners() {\r\n            document.removeEventListener('mouseup', cleanUpEventListeners)\r\n            document.removeEventListener('mousemove', callHandleMouseMove)\r\n        }\r\n        document.addEventListener('mousemove', callHandleMouseMove)\r\n        document.addEventListener('mouseup', cleanUpEventListeners)\r\n    }\r\n\r\n    function moveShift(mousePositionY, shiftData) {\r\n\r\n        // gives initial mouse position\r\n        let initialMousePosition = mousePositionY\r\n        let initialIndex = getTimeIndexFromMousePosition(initialMousePosition, timeRefsArray)\r\n        // event listener on mouse move\r\n        function moveShiftMouseMove(event) {\r\n            let newMousePositionY = event.clientY\r\n            let newIndex = getTimeIndexFromMousePosition(newMousePositionY, timeRefsArray)\r\n\r\n            let netIndex = newIndex - initialIndex\r\n\r\n            let startIndex = findTimeIndex(shiftData.start_time, times) //MAYBE CAN USE DATASET INSTEAD OF THIS FUNCTION NOW\r\n            let endIndex = findTimeIndex(shiftData.end_time, times)\r\n\r\n            let newStartIndex = startIndex + netIndex\r\n            let newEndIndex = endIndex + netIndex\r\n            if (newStartIndex >= 0 && newEndIndex <= times.length - 1) {\r\n                props.changeShift(props.id, shiftData.id, times[newStartIndex], times[newEndIndex])\r\n                handleOnLoadOrReload()\r\n            }\r\n\r\n        }\r\n        function cleanUpMoveShift() {\r\n            document.removeEventListener('mouseup', cleanUpMoveShift)\r\n            document.removeEventListener('mousemove', moveShiftMouseMove)\r\n        }\r\n\r\n        document.addEventListener('mousemove', moveShiftMouseMove)\r\n        document.addEventListener('mouseup', cleanUpMoveShift)\r\n    }\r\n\r\n    function generateShiftHeight(shift, timeArray) {\r\n        let startIndex = -1\r\n        let endIndex = -1\r\n        // finds start and end indices (should be it's own function)\r\n        if (shift.day === props.id) {\r\n            startIndex = findTimeIndex(shift.start_time, timeArray)\r\n            endIndex = findTimeIndex(shift.end_time, timeArray)\r\n\r\n        }\r\n\r\n        if (startIndex < 0 || endIndex < 0) {\r\n            console.log(`day ${props.id} has no shifts to add or something went wrong!`)\r\n            return []\r\n        }\r\n        else {\r\n            let shiftsPositions = [] //Should change name here\r\n            let start_timeComponent = timeRefsArray.current[startIndex]\r\n            let end_timeComponent = timeRefsArray.current[endIndex]\r\n            let startPosition = start_timeComponent.offsetTop\r\n            let endPosition = end_timeComponent.offsetTop + end_timeComponent.offsetHeight\r\n            let left = start_timeComponent.offsetLeft\r\n            let width = start_timeComponent.offsetWidth\r\n            let height = endPosition - startPosition\r\n            shiftsPositions = [startPosition, height, left, width]\r\n\r\n\r\n            return shiftsPositions\r\n        }\r\n    }\r\n\r\n    function handleOnLoadOrReload() {\r\n        var shiftStyles = []\r\n        if (props.shifts.length > 0) {\r\n            for (let i = 0; i < props.shifts.length; i++) {\r\n                const stylesArray = generateShiftHeight(props.shifts[i], times, timeRefsArray)\r\n                let top = stylesArray[0] //generate shift array re-generates the styles for all the shifts on this day!!!\r\n                let height = stylesArray[1]// thats why it returns a nested array\r\n                let left = stylesArray[2]\r\n                let width = stylesArray[3]\r\n                let shiftStyle = {\r\n                    height: height,\r\n                    top: top,\r\n                    left: left,\r\n                    width: width\r\n                }\r\n                shiftStyles.push(shiftStyle)\r\n            }\r\n        }\r\n        setStyles(shiftStyles)\r\n    }\r\n\r\n    // Time array holding each timeblock where difference between each time block depends on specification\r\n    const times = props.timesArr\r\n\r\n    useEffect(() => {\r\n        handleOnLoadOrReload(props.shifts, setStyles)\r\n        window.addEventListener('resize', handleOnLoadOrReload)\r\n        console.log(`HEHO`)\r\n        return (() => {\r\n            window.removeEventListener('resize', handleOnLoadOrReload) //Clean up event listener\r\n        })\r\n    }, [props.shifts])\r\n\r\n\r\n    return (\r\n        <div onMouseDown={handleOnMouseDownCreateShift} className='day-block'  >\r\n            <Day><p>{props.day}: <strong>{props.weekDate}</strong></p></Day>\r\n            {times.map((data, idx) => {\r\n                return (\r\n                    <div key={idx} data-day={props.day} data-time={data} ref={el => { timeRefsArray.current[idx] = el; }}>\r\n\r\n                        <TimeBlock\r\n\r\n                            id={idx}\r\n                            mouseDown={props.mouseDown}\r\n                            time={data}\r\n                            day={props.id}\r\n                        />\r\n\r\n                    </div>\r\n                )\r\n\r\n            })}\r\n            {props.shifts.map((data, idx) => {\r\n                return (\r\n                    <AvailabilityBlock\r\n                        key={idx}\r\n                        data={data}\r\n                        styles={styles[idx]}\r\n                        changeShiftTime={changeShiftTime}\r\n                        moveShift={moveShift}\r\n                        handleDeleteShift={props.handleDeleteShift} />\r\n                )\r\n\r\n            })}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AvailabilityDayBlock","import handleOnLoadOrReload from '../calendarComponents/AvailabilityDayBlock'\r\n// Take start and end times and compute each 30 minute time block\r\n\r\nexport function computeTimeArray(start_time, end_time, timeInterval) {\r\n    console.log('i am re-rendering')\r\n    let sTime = start_time.split(':').map(data => {\r\n        return parseInt(data)\r\n\r\n    })\r\n    let eTime = end_time.split(':').map(data => {\r\n        return parseInt(data)\r\n    })\r\n\r\n    // Used to calculate the number of blocks needed to display time table\r\n    // totalTime[0], holds total hours. \r\n    // totalTime[1] is 1 or 0 depending on whether or not start and end time lands on the same minute\r\n    let timeArray = []\r\n    let hours = eTime[0] - sTime[0]\r\n\r\n    // TODO: IMPLEMENT SOMETHING FOR EXTRAMINUTES\r\n    let extraMinutes = eTime[1] - sTime[1]\r\n\r\n    let minutesPerBlock = timeInterval\r\n    let blocksPerHour = 60 / minutesPerBlock\r\n\r\n    // number of blocks includes counting 0 (Start time)\r\n    let numberOfBlocks = (hours * blocksPerHour) + (extraMinutes / minutesPerBlock) + 1\r\n\r\n    let addHours = -1\r\n    let addMinutes = -minutesPerBlock\r\n\r\n    for (let i = 0; i < numberOfBlocks; i++) {\r\n        if (i % blocksPerHour === 0) {\r\n            addHours++\r\n            addMinutes = 0\r\n        }\r\n        else {\r\n            addMinutes += minutesPerBlock\r\n        }\r\n        let hourTime = (sTime[0] + addHours)\r\n        let minuteTime = (sTime[1] + addMinutes)\r\n        if (minuteTime === 0) {\r\n            minuteTime = '00'\r\n        }\r\n        timeArray.push(`${hourTime}:${minuteTime}`)\r\n\r\n    }\r\n    console.log(`time array: ${timeArray}`)\r\n    return timeArray\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { getFromServer, sendPostRequest } from '../../../helperFunctions/api'\r\nimport { EmployeeList } from '../managerStyles/ShiftStyles'\r\nimport ShiftDayBlock from './ShiftDayBlock'\r\nimport 'antd/dist/antd.css';\r\nimport { Divider, Menu, Layout } from 'antd'\r\nimport {\r\n    computeTimeArray,\r\n} from '../../../helperFunctions/AvailabilityDayBlockHelpers'\r\nimport {\r\n    DayBlockContainer,\r\n    WeekBlockContainer,\r\n} from '../../../employeeComponents/employeeStyles/availabilityStyles'\r\nimport { Button } from 'antd'\r\n\r\nconst { Sider, Content } = Layout\r\nconst Shifts = () => {\r\n    var date = new Date()\r\n    var weekStartDay = date.getDate() - date.getDay() + 7\r\n    const [employeeList, setEmployeeList] = useState([])\r\n    const [times, setTimes] = useState([\r\n        { 'day': 'Sunday', 'start': '12:00', 'end': '23:00', 'id': 0 },\r\n        { 'day': 'Monday', 'start': '12:00', 'end': '23:00', 'id': 1 },\r\n        { 'day': 'Tuesday', 'start': '12:00', 'end': '23:00', 'id': 2 },\r\n        { 'day': 'Wednesday', 'start': '12:00', 'end': '23:00', 'id': 3 },\r\n        { 'day': 'Thursday', 'start': '12:00', 'end': '23:00', 'id': 4 },\r\n        { 'day': 'Friday', 'start': '12:00', 'end': '23:00', 'id': 5 },\r\n        { 'day': 'Saturday', 'start': '12:00', 'end': '23:00', 'id': 6 },\r\n\r\n\r\n    ])\r\n    const [ViewEmployeeAvailabilities, setViewEmployeeAvailabilities] = useState([[], [], [], [], [], [], []])\r\n    const [shifts, setShifts] = useState([[], [], [], [], [], [], []])\r\n    const [employee, setEmployee] = useState(-1) //employee defined by their key\r\n\r\n    async function submitShifts() {\r\n        let postData = {\r\n            'shifts': shifts.flat(),\r\n            'employeeID': employee\r\n        }\r\n        const { data, status } = await sendPostRequest(postData, 'shifts')\r\n        console.log(`data: ${data}, status: ${status}`)\r\n\r\n        initializeEmployeeList()\r\n    }\r\n    async function initializeEmployeeList() {\r\n        const { data, status } = await getFromServer('employeeDataList') //get employees from server\r\n        if (status === 200) {\r\n\r\n\r\n            setEmployeeList(data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializeEmployeeList()\r\n    }, [])\r\n\r\n    const timeIntervals = 30;\r\n    const timesArray = useMemo(() => {\r\n        return computeTimeArray(times[0].start, times[0].end, timeIntervals)\r\n    }, [times[0].start, times[0].end])\r\n\r\n    // want to display something similar to availabilities except you can see list of employees on the left\r\n    // when you click on an employee, their availability box opens up\r\n    // should have dayblocks with display: hidden when no employee is clicked\r\n    // when employee is clicked, fill the dayblocks with the employee shifts\r\n\r\n    // for django:\r\n    // There should be two get shifts views. One for manager, one of employee\r\n    // When employee gets shifts, simply return their shifts\r\n    // when manager gets shifts, get queryset of shifts where manager = self.instance\r\n    // then returns shift start,end, and staff_id/name. Use staff to color different shifts\r\n    function findEmployeeAvailabilitiesOrShifts(key, shiftOrAvailability) {\r\n\r\n        for (let i = 0; i < employeeList.length; i++) {\r\n            if (parseInt(employeeList[i].id) === parseInt(key)) {\r\n                console.log('i have made it')\r\n                console.log(Object.keys(employeeList[i]))\r\n                return employeeList[i][shiftOrAvailability]\r\n            }\r\n        }\r\n        return []\r\n    }\r\n\r\n    function createNewShift(start_time, end_time, id, day) {\r\n        let dayIndex = parseInt(day)\r\n        let newShiftArray = [...shifts]\r\n        for (let i = 0; i < shifts.length; i++) { //deep copy array\r\n            newShiftArray[i] = shifts[i]\r\n        }\r\n\r\n        let newShift = {\r\n            'start_time': start_time,\r\n            'end_time': end_time,\r\n            'id': id,\r\n            'day': day\r\n        }\r\n        newShiftArray[day].push(newShift)\r\n        setShifts(newShiftArray)\r\n    }\r\n\r\n\r\n    function handleDeleteShift(day, id) {\r\n        let newShiftArray = [...shifts]\r\n        //DEEP COPY shifts state\r\n        for (let i = 0; i < newShiftArray.length; i++) {\r\n            newShiftArray[i] = [...shifts[i]]\r\n        }\r\n\r\n        for (let i = 0; i < newShiftArray[day].length; i++) {\r\n            if (newShiftArray[day][i].id === id) {\r\n                newShiftArray[day].splice(i, 1) //removes shift/availability from array\r\n            }\r\n        }\r\n        setShifts(newShiftArray)\r\n    }\r\n\r\n    function changeShift(start_time, end_time, id, day) {\r\n        const newShiftArray = [...shifts] // copy of prev state\r\n\r\n        for (let i = 0; i < shifts.length; i++) { //deep copy array\r\n            newShiftArray[i] = [...shifts[i]]\r\n        }\r\n        let dayShifts = newShiftArray[day] //Gets the array of shifts for that given day\r\n\r\n        let shiftIndex = newShiftArray[day].findIndex(shift => shift.id === id)\r\n        let updatedShift = { 'start_time': start_time, 'end_time': end_time, 'id': id, 'day': day }\r\n\r\n        newShiftArray[day][shiftIndex] = updatedShift\r\n        setShifts(newShiftArray)\r\n    }\r\n\r\n\r\n    function handleSelect({ item, key, keyPath, selectedKeys, domEvent }) {\r\n        let selectedEmployeeAvailabilities = findEmployeeAvailabilitiesOrShifts(key, 'week_availabilities')\r\n        console.log(`here are avail: ${selectedEmployeeAvailabilities}`)\r\n        const employeeAvailabilities = [[], [], [], [], [], [], []]\r\n        const resetShifts = [[], [], [], [], [], [], []]\r\n\r\n        for (let i = 0; i < selectedEmployeeAvailabilities.length; i++) {\r\n            let availability = selectedEmployeeAvailabilities[i]\r\n            employeeAvailabilities[availability.day].push(availability)\r\n        }\r\n\r\n        let selectedEmployeeShifts = findEmployeeAvailabilitiesOrShifts(key, 'week_shifts')\r\n        const employeeShifts = [[], [], [], [], [], [], []]\r\n\r\n        for (let i = 0; i < selectedEmployeeShifts.length; i++) {\r\n            let shift = selectedEmployeeShifts[i]\r\n            employeeShifts[shift.day].push(shift)\r\n        }\r\n\r\n        setShifts(employeeShifts)\r\n        setViewEmployeeAvailabilities(employeeAvailabilities)\r\n        setEmployee(key)\r\n        // setShifts(resetShifts)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Sider>\r\n                <EmployeeList>\r\n                    <Menu onClick={handleSelect} theme='dark' mode='vertical'>\r\n                        {employeeList.map(data => {\r\n                            return (\r\n                                <Menu.Item key={data.id}>\r\n                                    {data.name}\r\n                                </Menu.Item>\r\n                            )\r\n                        })}\r\n                    </Menu>\r\n                </EmployeeList>\r\n                <Button onClick={submitShifts}>Submit </Button>\r\n            </Sider>\r\n            <Content>\r\n                <WeekBlockContainer>\r\n                    {times.map((data, idx) => {\r\n                        return (\r\n                            <DayBlockContainer key={idx + 10}>\r\n                                <ShiftDayBlock\r\n                                    weekDate={weekStartDay + idx}\r\n                                    employee={employee}\r\n                                    day={data.day}\r\n                                    start={data.start}\r\n                                    end={data.end}\r\n                                    availabilities={ViewEmployeeAvailabilities[idx]}\r\n                                    shifts={shifts[idx]}\r\n                                    timesArr={timesArray}\r\n                                    id={data.id}\r\n                                    createNewShift={createNewShift}\r\n                                    changeShift={changeShift}\r\n                                    deleteShift={handleDeleteShift}\r\n                                />\r\n                            </DayBlockContainer>\r\n                            // <DayBlock\r\n                            //     day={data.day}\r\n                            //     start={data.start}\r\n                            //     end={data.end}\r\n                            //     id={data.id}\r\n                            //     // shifts={shifts[idx]}\r\n                            //     timesArr={timesArray}\r\n                            // // handleCreateShift={handleCreateShift}\r\n                            // // changeShift={changeShift}\r\n                            // // handleDeleteShift={handleDeleteShift} />\r\n                            // />\r\n\r\n                        )\r\n                    })}\r\n                </WeekBlockContainer>\r\n\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\nexport default Shifts","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ShiftBlock = styled.div`\r\nposition: absolute;\r\nz-index: 1;\r\nborder-radius: 5px;\r\nopacity: 0.9;\r\ntop: ${props => props.divTop};\r\nleft: ${props => props.divLeft};\r\nheight: ${props => props.divHeight};\r\nwidth:${props => props.divWidth};\r\nbackground-color: ${props => props.divColor};\r\n\r\nbox-shadow: ${props => props.selected ? '3px 6px' : ''};\r\n\r\n`\r\nconst ScheduleShiftBlock = (props) => {\r\n\r\n\r\n\r\n    var myStyle = {}\r\n    if (typeof (props.styles) !== \"undefined\") {\r\n        myStyle = {\r\n            top: `${props.styles.top}px`,\r\n            height: `${props.styles.height}px`,\r\n            left: `${props.styles.left}px`,\r\n            width: `${props.styles.width}px`,\r\n            selected: props.data.selected,\r\n            color: `${props.data.color}`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function handleOnClick() {\r\n        props.handleOnClick(props.data.staff_id)\r\n    }\r\n    console.log(props.data.selected)\r\n\r\n    return (\r\n        <div>\r\n            <ShiftBlock\r\n                divHeight={myStyle.height}\r\n                divTop={myStyle.top}\r\n                divLeft={myStyle.left}\r\n                divWidth={myStyle.width}\r\n                onClick={handleOnClick}\r\n                selected={myStyle.selected}\r\n                divColor={myStyle.color}\r\n            >\r\n\r\n\r\n            </ShiftBlock >\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default ScheduleShiftBlock","import React, { useState, useEffect, useRef, useMemo } from 'react'\r\nimport TimeBlock from '../../../calendarComponents/TimeBlock'\r\nimport ScheduleShiftBlock from './ScheduleShiftBlock'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd'\r\n\r\nconst StyledButton = styled(Button)`\r\nheight: 30px;\r\nbackground-color:#74BDCB;\r\n`\r\n\r\nconst ScheduleDayBlock = (props) => {\r\n\r\n    // Shift day block should still receive shifts(availabilities)\r\n    // To create shifts, should have handlers on the shift component\r\n    // Lets have template only worry about rendering shifts\r\n\r\n\r\n    var shortID = require('shortid')\r\n    function createID() {\r\n        return shortID.generate()\r\n    }\r\n\r\n    const timeRefsArray = useRef([])\r\n    const [styles, setStyles] = useState([])\r\n\r\n\r\n    // function getTimeIndexFromMousePosition(mousePositionY) {\r\n    //     let timeIndex = -1\r\n\r\n    //     for (let i = 0; i < timeRefsArray.current.length; i++) {\r\n    //         let timeBlockTopPositionY = timeRefsArray.current[i].offsetTop\r\n    //         // let timeBlockBottomPositionY = timeBlockTopPositionY + timeRefsArray.current[i].offsetHeight\r\n    //         if (mousePositionY > timeBlockTopPositionY) {\r\n    //             timeIndex = i\r\n    //         }\r\n    //     }\r\n    //     return timeIndex\r\n    // }\r\n\r\n\r\n    // Given time and time Array, find the index where the time is located\r\n    // Returns negative number if the time is not in the Times array\r\n    function findTimeIndex(time, timesArray) {\r\n\r\n        let index = -1\r\n        for (let i = 0; i < timesArray.length; i++) {\r\n            if (timesArray[i] === time) {\r\n                index = i\r\n            }\r\n\r\n        }\r\n        return index\r\n    }\r\n    function handleOnClick() {\r\n        console.log('HELLOOOO')\r\n    }\r\n\r\n    function generateShiftHeight(shift, timeArray) {\r\n        let startIndex = -1\r\n        let endIndex = -1\r\n        // finds start and end indices (should be it's own function)\r\n        if (shift.day === props.id) {\r\n            startIndex = findTimeIndex(shift.start_time, timeArray)\r\n            endIndex = findTimeIndex(shift.end_time, timeArray)\r\n\r\n        }\r\n\r\n        if (startIndex < 0 || endIndex < 0) {\r\n            console.log(`day ${props.id} has no shifts to add or something went wrong!`)\r\n            return []\r\n        }\r\n        else {\r\n            let shiftsPositions = [] //Should change name here\r\n            let start_timeComponent = timeRefsArray.current[startIndex]\r\n            let end_timeComponent = timeRefsArray.current[endIndex]\r\n            let startPosition = start_timeComponent.offsetTop\r\n            let endPosition = end_timeComponent.offsetTop + end_timeComponent.offsetHeight\r\n            let left = start_timeComponent.offsetLeft\r\n            let width = start_timeComponent.offsetWidth\r\n            let height = endPosition - startPosition\r\n            shiftsPositions = [startPosition, height, left, width]\r\n\r\n\r\n            return shiftsPositions\r\n        }\r\n    }\r\n\r\n    function handleOnLoadOrReload() {\r\n        var shiftStyles = []\r\n        if (props.shifts.length > 0) {\r\n            let left = 0\r\n            for (let i = 0; i < props.shifts.length; i++) {\r\n                const stylesArray = generateShiftHeight(props.shifts[i], times)\r\n                let top = stylesArray[0] //generate shift array re-generates the styles for all the shifts on this day!!!\r\n                let height = stylesArray[1]// thats why it returns a nested array\r\n                let width = stylesArray[3] / props.shifts.length\r\n                if (left === 0) {\r\n                    left = stylesArray[2]\r\n                }\r\n                else {\r\n                    left += width\r\n                }\r\n                let shiftStyle = {\r\n                    height: height,\r\n                    top: top,\r\n                    left: left,\r\n                    width: width\r\n                }\r\n                shiftStyles.push(shiftStyle)\r\n            }\r\n        }\r\n        setStyles(shiftStyles)\r\n    }\r\n\r\n    // // Time array holding each timeblock where difference between each time block depends on specification\r\n    const times = props.timesArr\r\n\r\n    useEffect(() => {\r\n        handleOnLoadOrReload()\r\n        window.addEventListener('resize', handleOnLoadOrReload)\r\n        return (() => {\r\n            window.removeEventListener('resize', handleOnLoadOrReload) //Clean up event listener\r\n        })\r\n\r\n    }, [props.shifts])\r\n\r\n\r\n    return (\r\n        // <div onMouseDown={handleOnMouseDownCreateShift} className='day-block'  >\r\n        <div className='day-block'  >\r\n            <StyledButton onClick={handleOnClick}>{props.day}: <strong>{props.weekDate}</strong></StyledButton>\r\n            {\r\n                times.map((data, idx) => {\r\n                    return (\r\n                        <div key={idx} data-day={props.day} data-time={data} ref={el => { timeRefsArray.current[idx] = el; }}>\r\n\r\n                            <TimeBlock\r\n\r\n                                id={idx}\r\n                                // mouseDown={props.mouseDown}\r\n                                time={data}\r\n                            // day={props.id}\r\n                            />\r\n\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n            }\r\n            {\r\n                props.shifts.map((data, idx) => {\r\n                    return (\r\n                        <ScheduleShiftBlock\r\n                            key={idx}\r\n                            data={data}\r\n                            styles={styles[idx]}\r\n                            handleOnClick={props.handleOnClick}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ScheduleDayBlock","import React from 'react'\r\nimport { Divider, Button } from 'antd'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled(Button)`\r\n    box-shadow: ${props => props.selected ? '2px 4px' : ''};\r\n    border-color: ${props => props.divColor};\r\n    &:hover{\r\n        border-color: ${props => props.divColor};\r\n        color: ${props => props.divColor};\r\n        box-shadow: 2px 4px ${props => props.divColor};\r\n    }\r\n`\r\n\r\nconst EmployeeName = (props) => {\r\n\r\n    function handleOnClick() {\r\n\r\n        props.handleOnClick(props.id)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledButton divColor={props.divColor} selected={props.selected} onClick={handleOnClick}>{props.name}</StyledButton>\r\n            <Divider />\r\n        </>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default EmployeeName","import React, { useState, useMemo, useEffect } from 'react'\r\nimport {\r\n    DayBlockContainer,\r\n    WeekBlockContainer,\r\n} from '../../../employeeComponents/employeeStyles/availabilityStyles'\r\nimport ScheduleDayBlock from './ScheduleDayBlock'\r\nimport {\r\n    computeTimeArray,\r\n} from '../../../helperFunctions/AvailabilityDayBlockHelpers'\r\n\r\nimport { getFromServer } from '../../../helperFunctions/api'\r\n// import styled from 'styled-components'\r\nimport styled from 'styled-components'\r\nimport { Layout, Button } from 'antd'\r\nimport EmployeeName from './EmployeeName'\r\nconst { Sider, Content } = Layout\r\n\r\nconst ListOfEmployees = styled(Sider)`\r\n    background-color: #fff;\r\n`\r\nconst StyledLayout = styled(Layout)`\r\n    background-color: #fff;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n`\r\n\r\nconst Schedule = () => {\r\n    const [times, setTimes] = useState([\r\n        { 'day': 'Sunday', 'start': '12:00', 'end': '23:00', 'id': 0 },\r\n        { 'day': 'Monday', 'start': '12:00', 'end': '23:00', 'id': 1 },\r\n        { 'day': 'Tuesday', 'start': '12:00', 'end': '23:00', 'id': 2 },\r\n        { 'day': 'Wednesday', 'start': '12:00', 'end': '23:00', 'id': 3 },\r\n        { 'day': 'Thursday', 'start': '12:00', 'end': '23:00', 'id': 4 },\r\n        { 'day': 'Friday', 'start': '12:00', 'end': '23:00', 'id': 5 },\r\n        { 'day': 'Saturday', 'start': '12:00', 'end': '23:00', 'id': 6 },\r\n\r\n\r\n    ])\r\n    var date = new Date()\r\n    var weekStartDay = date.getDate() - date.getDay() + 7\r\n    const timeIntervals = 30\r\n    const colorArray = ['#ffd3ae', '#ff6842', '#835b32', '#00d8c8', '#194b4a', '#f9b7d4', '#d26060', '#1bd0b0', '#4d3e47']\r\n\r\n    const [shifts, setShifts] = useState([[], [], [], [], [], [], []])\r\n    const [employeeList, setEmployeeList] = useState([])\r\n\r\n    const timesArray = useMemo(() => {\r\n        return computeTimeArray(times[0].start, times[0].end, timeIntervals)\r\n    }, [times[0].start, times[0].end])\r\n    async function getEmployeeList() {\r\n        return await getFromServer('shifts')\r\n    }\r\n\r\n    function handleOnClick(event) {\r\n        console.log(`event.target.dataset: ${JSON.stringify(event.target.dataset)}`)\r\n    }\r\n\r\n    function selectEmployeeShifts(employeeID) {\r\n        const newEmployeeList = employeeList.map((employee) => {\r\n            if (employee.id === employeeID) {\r\n                employee.selected = true\r\n            }\r\n            else {\r\n                employee.selected = false\r\n            }\r\n            return employee\r\n        })\r\n        setEmployeeList(newEmployeeList)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializeEmployeeList()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const initialShifts = [[], [], [], [], [], [], []]\r\n        for (let i = 0; i < employeeList.length; i++) {\r\n            for (let j = 0; j < employeeList[i].week_shifts.length; j++) {\r\n                console.log('hello')\r\n                let shift = {\r\n                    'name': employeeList[i].name,\r\n                    'day': employeeList[i].week_shifts[j].day,\r\n                    'start_time': employeeList[i].week_shifts[j].start_time,\r\n                    'end_time': employeeList[i].week_shifts[j].end_time,\r\n                    'id': employeeList[i].week_shifts[j].id,\r\n                    'staff_id': employeeList[i].id,\r\n                    'selected': employeeList[i].selected,\r\n                    'color': employeeList[i].color\r\n                }\r\n                initialShifts[employeeList[i].week_shifts[j].day].push(shift)\r\n            }\r\n        }\r\n        setShifts(initialShifts)\r\n    }, [employeeList])\r\n\r\n\r\n    async function initializeEmployeeList() {\r\n\r\n        let { data, status } = await getEmployeeList()\r\n\r\n\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            data[i].selected = false;\r\n            let colorIndex = i % colorArray.length\r\n            data[i].color = colorArray[colorIndex]\r\n        }\r\n\r\n\r\n        if (status === 200) {\r\n            setEmployeeList(data)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <StyledLayout>\r\n            <ListOfEmployees>\r\n                {employeeList.map((data) => {\r\n                    return (\r\n\r\n                        <EmployeeName\r\n                            selected={data.selected}\r\n                            id={data.id}\r\n                            key={data.id}\r\n                            name={data.name}\r\n                            handleOnClick={selectEmployeeShifts}\r\n                            divColor={data.color}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n\r\n            </ListOfEmployees>\r\n            <Content>\r\n                <WeekBlockContainer >\r\n                    {\r\n                        times.map((data, idx) => {\r\n                            return (\r\n                                <DayBlockContainer key={`d${idx}`}>\r\n                                    <ScheduleDayBlock\r\n                                        day={data.day}\r\n\r\n                                        weekDate={weekStartDay + idx}\r\n                                        start={data.start}\r\n                                        end={data.end}\r\n                                        // availabilities={ViewEmployeeAvailabilities[idx]}\r\n                                        shifts={shifts[idx]}\r\n                                        timesArr={timesArray}\r\n                                        id={data.id}\r\n                                        handleOnClick={selectEmployeeShifts}\r\n                                    />\r\n                                </DayBlockContainer>\r\n                                // <DayBlock\r\n                                //     day={data.day}\r\n                                //     start={data.start}\r\n                                //     end={data.end}\r\n                                //     id={data.id}\r\n                                //     // shifts={shifts[idx]}\r\n                                //     timesArr={timesArray}\r\n                                // // handleCreateShift={handleCreateShift}\r\n                                // // changeShift={changeShift}\r\n                                // // handleDeleteShift={handleDeleteShift} />\r\n                                // />\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </WeekBlockContainer >\r\n            </Content>\r\n        </StyledLayout>\r\n\r\n    )\r\n}\r\nexport default Schedule","import React, { useState, useEffect } from 'react';\r\nimport { getFromServer } from './helperFunctions/api'\r\nimport { Divider } from 'antd'\r\n\r\nconst Profile = () => {\r\n\r\n    const [userData, setUserData] = useState({})\r\n\r\n    async function getUserData() {\r\n        console.log('am i being called?')\r\n        const { data, status } = await getFromServer('employee')\r\n        console.log(`this is data: ${JSON.stringify(data)}, this is status: ${status}`)\r\n        if (status === 200) {\r\n            console.log(`this is data: ${JSON.stringify(data)}`)\r\n            setUserData(data)\r\n\r\n        }\r\n        else {\r\n            console.log('not 200')\r\n            console.log(`status: ${status}`)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log('use effect')\r\n        getUserData()\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>name: {userData.name}</h3>\r\n            <Divider />\r\n            <h3>email: {userData.email}</h3>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { Divider } from 'antd'\r\n\r\nconst ConfirmedEmployee = (props) => {\r\n    console.log(`this is data: ${JSON.stringify(props.data)}`)\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                {props.data.name}\r\n            </h1>\r\n            <Divider />\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ConfirmedEmployee","import React from 'react'\r\nimport { Divider } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { Button } from 'antd'\r\n\r\nconst PendingDiv = styled.div`\r\n    position: relative;\r\n`\r\nconst DeleteButton = styled(Button)`\r\n    position: absolute;\r\n    right:0px;\r\n    margin-left: auto;\r\n    padding: 5px;\r\n    display: inline-block;\r\n`\r\n\r\nconst PendingEmployee = (props) => {\r\n\r\n    function handleDelete() {\r\n        props.delete(props.data.id)\r\n\r\n    }\r\n\r\n    return (\r\n        <PendingDiv>\r\n            <h1 style={{ display: 'inline-block' }}>\r\n                {props.data.name}\r\n            </h1>\r\n            <DeleteButton onClick={handleDelete}>Remove</DeleteButton>\r\n            <Divider />\r\n        </PendingDiv>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PendingEmployee","import React, { useState, useEffect } from 'react'\r\nimport { Layout, Form, Button, Input, Divider } from 'antd'\r\nimport { getFromServer, sendPostRequest, sendDeleteRequest } from '../../../helperFunctions/api'\r\nimport ConfirmedEmployee from './ConfirmedEmployee'\r\nimport PendingEmployee from './PendingEmployee'\r\nimport { API_HOST } from '../../../../settings'\r\nimport 'antd/dist/antd.css';\r\nimport styled from 'styled-components'\r\n\r\nconst { Content, Sider } = Layout\r\nconst MyStyledSider = styled(Sider)`\r\n    height:100vh;\r\n    background-color: #fff;\r\n`\r\nconst MyStyledContent = styled(Content)`\r\n    background-color: #fff;\r\n    padding-right: 10%;\r\n\r\n`\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\n\r\nconst AddEmployees = () => {\r\n\r\n    const [pendingEmployees, setPendingEmployees] = useState([])\r\n    const [confirmedEmployees, setConfirmedEmployees] = useState([])\r\n    const jwt = localStorage.getItem('access')\r\n\r\n    async function onFinish(value) {\r\n        console.log(`email ${JSON.stringify(value)}`)\r\n        console.log('hello')\r\n        let postData = {\r\n            'email': value.email,\r\n            'name': value.name\r\n        }\r\n        let { data, status } = await sendPostRequest(postData, 'employee-list')\r\n        if (status === 201) {\r\n\r\n            initializeEmployees()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async function deleteEmployee(id) {\r\n        let postData = {\r\n            'id': id\r\n        }\r\n        let { data, status } = await sendDeleteRequest(id, 'employee')\r\n        if (status === 200) {\r\n            initializeEmployees()\r\n\r\n        }\r\n\r\n    }\r\n\r\n    async function initializeEmployees() {\r\n\r\n        let { data, status } = await getFromServer('employee-list')\r\n        console.log(`data: ${JSON.stringify(data)}, status: ${status}`)\r\n        let confEmployees = data.confirmed\r\n        let pendEmployees = data.pending\r\n\r\n        setConfirmedEmployees(confEmployees)\r\n        setPendingEmployees(pendEmployees)\r\n    }\r\n    useEffect(() => {\r\n\r\n        initializeEmployees()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Layout>\r\n            <MyStyledSider>\r\n                <h1>Confirmed Employees:</h1>\r\n                <Divider />\r\n                {confirmedEmployees.map((data) => {\r\n\r\n                    return (\r\n                        <ConfirmedEmployee delete={deleteEmployee} data={data} />\r\n                    )\r\n                })}\r\n            </MyStyledSider>\r\n            <MyStyledContent>\r\n                <h1>Pending Employees:</h1>\r\n                <Divider />\r\n                {pendingEmployees.map((data) => {\r\n                    return (\r\n                        <PendingEmployee delete={deleteEmployee} data={data} />\r\n                    )\r\n                })}\r\n                <Form\r\n                    // {...layout}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        label='email'\r\n                        name='email'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please enter a valid email address',\r\n                            },\r\n                            {\r\n                                type: 'email',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label='name'\r\n                        name='name'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please enter a name!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Button htmlType=\"submit\">Add Employee</Button>\r\n\r\n                </Form>\r\n            </MyStyledContent>\r\n        </Layout>\r\n    )\r\n\r\n}\r\nexport default AddEmployees","import React from 'react';\r\nimport Shifts from './SetShiftsComponents/Shifts'\r\nimport Schedule from './ViewSchedule/Schedule'\r\nimport Profile from '../../Profile'\r\nimport AddEmployees from './addEmployees/AddEmployees'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n} from 'react-router-dom'\r\nimport { NavButton } from '../../../styles/nav'\r\nimport { useAuthUpdate } from '../../AuthProvider'\r\n\r\nconst Manager = () => {\r\n    const setAuth = useAuthUpdate()\r\n    function handleLogOut() {\r\n\r\n        localStorage.clear()\r\n        setAuth({ 'isAuth': false, 'manager': false })\r\n\r\n    }\r\n    const match = useRouteMatch()\r\n    return (\r\n        <div>\r\n            <header>\r\n                <nav>\r\n                    <ul className={'nav-list'}>\r\n                        <li style={{ marginRight: 'auto' }}>\r\n                            <Link to={`${match.url}/Profile`}><NavButton color='primary'>View Profile</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={`${match.url}/add-employees`}><NavButton color='primary'>Add Employees</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={`${match.url}/Shifts`}><NavButton color='primary'>Set Shifts</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={`${match.url}/Schedule`}><NavButton color='primary'>View Schedule</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={''}><NavButton color='primary' onClick={handleLogOut}>Logout</NavButton></Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <Switch>\r\n                <Route path={`${match.path}/Profile`}>\r\n                    <Profile />\r\n                </Route>\r\n                <Route path={`${match.path}/add-employees`}>\r\n                    <AddEmployees />\r\n                </Route>\r\n                <Route path={`${match.path}/Shifts`}>\r\n                    <Shifts />\r\n                </Route>\r\n                <Route path={`${match.path}/Schedule`}>\r\n                    <Schedule />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Manager","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ShiftBlock = styled.div`\r\nposition: absolute;\r\nz-index: 2;\r\nborder-radius: 5px;\r\nopacity: 0.9;\r\ntop: ${props => props.divTop};\r\nleft: ${props => props.divLeft};\r\nheight: ${props => props.divHeight};\r\nwidth:${props => props.divWidth};\r\nbackground-color: ${'#ff6969'};\r\n\r\n\r\n`\r\nconst ShiftBlockTemplate = (props) => {\r\n\r\n    console.log(`these are the props for shift block: ${JSON.stringify(props)}`)\r\n\r\n    var myStyle = {}\r\n    if (typeof (props.styles) !== \"undefined\") {\r\n        myStyle = {\r\n            top: `${props.styles.top}px`,\r\n            height: `${props.styles.height}px`,\r\n            left: `${props.styles.left}px`,\r\n            width: `${props.styles.width}px`,\r\n            color: `${props.data.color}`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ShiftBlock\r\n                divHeight={myStyle.height}\r\n                divTop={myStyle.top}\r\n                divLeft={myStyle.left}\r\n                divWidth={myStyle.width}\r\n                divColor={myStyle.color}\r\n            >\r\n                {props.data.start_time} - {props.data.end_time}\r\n\r\n            </ShiftBlock >\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default ShiftBlockTemplate","import React, { useState, useEffect, useRef, useMemo } from 'react'\r\nimport TimeBlock from './TimeBlock'\r\nimport ShiftBlockTemplate from './ShiftBlockTemplate'\r\n\r\nimport { Day } from '../employeeComponents/employeeStyles/availabilityStyles'\r\n\r\nconst DayTemplate = (props) => {\r\n\r\n    // Shift day block should still receive shifts(availabilities)\r\n    // To create shifts, should have handlers on the shift component\r\n    // Lets have template only worry about rendering shifts\r\n\r\n    var shortID = require('shortid')\r\n    function createID() {\r\n        return shortID.generate()\r\n    }\r\n    console.log(`this is the shift passed to day: ${JSON.stringify(props.shifts)}`)\r\n\r\n    const timeRefsArray = useRef([])\r\n    const [styles, setStyles] = useState([])\r\n    var date = new Date()\r\n    var weekStartDay = date.getDate() - date.getDay() + 7\r\n\r\n    // function getTimeIndexFromMousePosition(mousePositionY) {\r\n    //     let timeIndex = -1\r\n\r\n    //     for (let i = 0; i < timeRefsArray.current.length; i++) {\r\n    //         let timeBlockTopPositionY = timeRefsArray.current[i].offsetTop\r\n    //         // let timeBlockBottomPositionY = timeBlockTopPositionY + timeRefsArray.current[i].offsetHeight\r\n    //         if (mousePositionY > timeBlockTopPositionY) {\r\n    //             timeIndex = i\r\n    //         }\r\n    //     }\r\n    //     return timeIndex\r\n    // }\r\n\r\n\r\n    // Given time and time Array, find the index where the time is located\r\n    // Returns negative number if the time is not in the Times array\r\n    function findTimeIndex(time, timesArray) {\r\n\r\n        let index = -1\r\n        for (let i = 0; i < timesArray.length; i++) {\r\n            if (timesArray[i] === time) {\r\n                index = i\r\n            }\r\n\r\n        }\r\n        return index\r\n    }\r\n\r\n    function generateShiftHeight(shift, timeArray) {\r\n        let startIndex = -1\r\n        let endIndex = -1\r\n        // finds start and end indices (should be it's own function)\r\n        if (shift.day === props.id) {\r\n            startIndex = findTimeIndex(shift.start_time, timeArray)\r\n            endIndex = findTimeIndex(shift.end_time, timeArray)\r\n\r\n        }\r\n\r\n        if (startIndex < 0 || endIndex < 0) {\r\n            console.log(`day ${props.id} has no shifts to add or something went wrong!`)\r\n            return []\r\n        }\r\n        else {\r\n            let shiftsPositions = [] //Should change name here\r\n            let start_timeComponent = timeRefsArray.current[startIndex]\r\n            let end_timeComponent = timeRefsArray.current[endIndex]\r\n            let startPosition = start_timeComponent.offsetTop\r\n            let endPosition = end_timeComponent.offsetTop + end_timeComponent.offsetHeight\r\n            let left = start_timeComponent.offsetLeft\r\n            let width = start_timeComponent.offsetWidth\r\n            let height = endPosition - startPosition\r\n            shiftsPositions = [startPosition, height, left, width]\r\n\r\n\r\n            return shiftsPositions\r\n        }\r\n    }\r\n\r\n    function handleOnLoadOrReload() {\r\n        var shiftStyles = []\r\n        if (props.shifts.length > 0) {\r\n            for (let i = 0; i < props.shifts.length; i++) {\r\n                const stylesArray = generateShiftHeight(props.shifts[i], times, timeRefsArray)\r\n                let top = stylesArray[0] //generate shift array re-generates the styles for all the shifts on this day!!!\r\n                let height = stylesArray[1]// thats why it returns a nested array\r\n                let left = stylesArray[2]\r\n                let width = stylesArray[3]\r\n                let shiftStyle = {\r\n                    height: height,\r\n                    top: top,\r\n                    left: left,\r\n                    width: width\r\n                }\r\n                shiftStyles.push(shiftStyle)\r\n            }\r\n        }\r\n        setStyles(shiftStyles)\r\n    }\r\n\r\n    // // Time array holding each timeblock where difference between each time block depends on specification\r\n    const times = props.timesArr\r\n\r\n    useEffect(() => {\r\n        handleOnLoadOrReload(props.shifts, setStyles)\r\n        window.addEventListener('resize', handleOnLoadOrReload)\r\n        return (() => {\r\n            window.removeEventListener('resize', handleOnLoadOrReload) //Clean up event listener\r\n        })\r\n    }, [props.shifts])\r\n\r\n\r\n    return (\r\n        // <div onMouseDown={handleOnMouseDownCreateShift} className='day-block'  >\r\n        <div className='day-block'  >\r\n            <Day><p>{props.day}: <strong>{props.weekDate}</strong></p></Day>\r\n            {\r\n                times.map((data, idx) => {\r\n                    return (\r\n                        <div key={idx} data-day={props.day} data-time={data} ref={el => { timeRefsArray.current[idx] = el; }}>\r\n\r\n                            <TimeBlock\r\n\r\n                                id={idx}\r\n                                // mouseDown={props.mouseDown}\r\n                                time={data}\r\n                            // day={props.id}\r\n                            />\r\n\r\n                        </div>\r\n                    )\r\n\r\n                })\r\n            }\r\n            {\r\n                props.shifts.map((data, idx) => {\r\n                    return (\r\n                        <ShiftBlockTemplate\r\n                            key={idx}\r\n                            data={data}\r\n                            styles={styles[idx]}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div >\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default DayTemplate","import React, { useState, useMemo } from 'react'\r\nimport {\r\n    DayBlockContainer,\r\n    WeekBlockContainer,\r\n} from '../employeeComponents/employeeStyles/availabilityStyles'\r\nimport DayTemplate from './DayTemplate'\r\nimport {\r\n    computeTimeArray,\r\n} from '../helperFunctions/AvailabilityDayBlockHelpers'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst WeekTemplate = (props) => {\r\n    var date = new Date()\r\n    var weekStartDay = date.getDate() - date.getDay() + 7\r\n    const [times, setTimes] = useState([\r\n        { 'day': 'Sunday', 'start': '12:00', 'end': '23:00', 'id': 0 },\r\n        { 'day': 'Monday', 'start': '12:00', 'end': '23:00', 'id': 1 },\r\n        { 'day': 'Tuesday', 'start': '12:00', 'end': '23:00', 'id': 2 },\r\n        { 'day': 'Wednesday', 'start': '12:00', 'end': '23:00', 'id': 3 },\r\n        { 'day': 'Thursday', 'start': '12:00', 'end': '23:00', 'id': 4 },\r\n        { 'day': 'Friday', 'start': '12:00', 'end': '23:00', 'id': 5 },\r\n        { 'day': 'Saturday', 'start': '12:00', 'end': '23:00', 'id': 6 },\r\n\r\n\r\n    ])\r\n    const timeIntervals = 30\r\n    console.log(`this is the passed shifts: ${props.shifts}`)\r\n\r\n    const timesArray = useMemo(() => {\r\n        return computeTimeArray(times[0].start, times[0].end, timeIntervals)\r\n    }, [times[0].start, times[0].end])\r\n\r\n    return (\r\n        <WeekBlockContainer >\r\n            {\r\n                times.map((data, idx) => {\r\n                    return (\r\n                        <DayBlockContainer key={idx + 10}>\r\n                            <DayTemplate\r\n                                day={data.day}\r\n                                weekDate={weekStartDay + idx}\r\n                                start={data.start}\r\n                                end={data.end}\r\n                                shifts={props.shifts[idx]}\r\n                                timesArr={timesArray}\r\n                                id={data.id}\r\n                            />\r\n                        </DayBlockContainer>\r\n                        // <DayBlock\r\n                        //     day={data.day}\r\n                        //     start={data.start}\r\n                        //     end={data.end}\r\n                        //     id={data.id}\r\n                        //     // shifts={shifts[idx]}\r\n                        //     timesArr={timesArray}\r\n                        // // handleCreateShift={handleCreateShift}\r\n                        // // changeShift={changeShift}\r\n                        // // handleDeleteShift={handleDeleteShift} />\r\n                        // />\r\n\r\n                    )\r\n                })\r\n            }\r\n        </WeekBlockContainer >\r\n\r\n    )\r\n}\r\nexport default WeekTemplate","import React, { useEffect, useState } from 'react'\r\nimport { getFromServer } from '../../helperFunctions/api'\r\n\r\nimport WeekTemplate from '../../calendarComponents/WeekTemplate'\r\nconst Schedule = () => {\r\n\r\n    const [shifts, setShifts] = useState([[], [], [], [], [], [], []])\r\n\r\n    async function initializeShifts() {\r\n\r\n        const { data, status } = await getFromServer('view-shifts')\r\n        console.log(`data: ${JSON.stringify(data)}, status: ${status}`)\r\n        if (status === 200) {\r\n            let newShiftArray = [...shifts]\r\n            //DEEP COPY shifts state\r\n            for (let i = 0; i < newShiftArray.length; i++) {\r\n                newShiftArray[i] = [...shifts[i]]\r\n            }\r\n            //populate new state with API response\r\n            for (let i = 0; i < data.length; i++) {\r\n                let shiftObject = data[i]\r\n                newShiftArray[shiftObject.day].push(shiftObject)\r\n            }\r\n            console.log(`this is new shift array: ${newShiftArray}`)\r\n            setShifts(newShiftArray)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializeShifts()\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n\r\n        <WeekTemplate shifts={shifts} />\r\n    )\r\n}\r\nexport default Schedule","import React from 'react';\r\nimport EmployeeNav from '../../EmployeeNav';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport Profile from '../../Profile';\r\nimport Availability from './Availability';\r\nimport Schedule from './Schedule';\r\nimport '../../employeeComponents/employeeStyles/employee.css'\r\nimport { NavButton } from '../../../styles/nav'\r\nimport { useAuthUpdate } from '../../AuthProvider'\r\n// const NavButton = styled(Button)`\r\n// font-family: \"Montserrat\", sans-serif;\r\n\r\n// `;\r\n\r\nconst Employee = () => {\r\n    const setAuth = useAuthUpdate()\r\n    function handleLogOut() {\r\n\r\n        localStorage.clear()\r\n\r\n\r\n        setAuth({ 'isAuth': false, 'manager': false })\r\n\r\n    }\r\n\r\n    let match = useRouteMatch();\r\n    console.log(`match url: ${match.url}`)\r\n    return (\r\n        <div>\r\n            <header>\r\n                <nav>\r\n                    <ul className={'nav-list'}>\r\n                        <li style={{ marginRight: 'auto' }}>\r\n                            <Link to={`${match.url}/Profile`}><NavButton color='primary'>View Profile</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={`${match.url}/Availability`}><NavButton color='primary'>Give Availability</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={`${match.url}/Schedule`}><NavButton color='primary'>View Schedule</NavButton></Link>\r\n                        </li>\r\n                        <li className={'nav-element'}>\r\n                            <Link to={''}><NavButton color='primary' onClick={handleLogOut}>Logout</NavButton></Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <Switch>\r\n                <Route path={`${match.path}/Profile`}>\r\n                    <Profile />\r\n                </Route>\r\n                <Route path={`${match.path}/Availability`}>\r\n                    <Availability />\r\n                </Route>\r\n                <Route path={`${match.path}/Schedule`}>\r\n                    <Schedule />\r\n                </Route>\r\n            </Switch>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Employee","import styled from 'styled-components'\r\n\r\nexport const FormContainer = styled.div`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    height: 80vh;\r\n    width: 33vw;\r\n    // border-radius: 10px;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    padding: 5%;\r\n    // z-index:-1;\r\n    background-color: #f8f8ff;\r\n    overflow-y: scroll;\r\n    transform: translate(-50%, -50%)\r\n\r\n`\r\n\r\nexport const Background = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-color: #fff;\r\n`","import { API_HOST } from '../../../settings'\r\n\r\nexport async function LoginUser(email, password, controller) {\r\n    let postData = {\r\n        \"email\": email,\r\n        \"password\": password\r\n    }\r\n    let response = await fetch(`${API_HOST}/token/myobtain/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(postData),\r\n        signal: controller.signal\r\n    });\r\n    let data = await response.json()\r\n    let status = await response.status\r\n    return { 'data': data, 'status': status }\r\n\r\n}\r\n\r\nexport async function RegisterUser(values) {\r\n    let postData = {\r\n        'email': values.email,\r\n        'name': values.name,\r\n        'password': values.password,\r\n        'store': values.store,\r\n        'location': values.location\r\n    }\r\n    let response = await fetch(`${API_HOST}/register/manager/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n\r\n    let data = await response.json()\r\n    let status = await response.status\r\n    console.log(`status: ${status}`)\r\n    console.log(`response: ${JSON.stringify(data)}`)\r\n    return { 'data': data, 'status': status }\r\n}\r\n\r\nexport async function ResetPasswordAPI(jToken, resetData) {\r\n    let jwt = jToken\r\n    console.log(`jwt: ${jwt}`)\r\n    let postData = {\r\n        'password': resetData.password\r\n    }\r\n    let response = await fetch(`${API_HOST}/reset-password/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'Authorization': `JWT ${jwt}`\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(postData)\r\n    })\r\n\r\n\r\n    let data = await response.json()\r\n    let status = await response.status\r\n\r\n    return { 'data': data, 'status': status }\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { FormContainer, Background } from '../../../styles/registrationLogin/FormContainer'\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { RegisterUser } from './RegistrationLoginAPI'\r\nimport { Redirect } from 'react-router-dom'\r\nconst layout = {\r\n    labelCol: {\r\n        sm: {\r\n            span: 24,\r\n        },\r\n        lg: {\r\n            span: 24,\r\n        },\r\n        xl: {\r\n            span: 24,\r\n        },\r\n        xxl: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        sm: {\r\n            span: 24,\r\n        },\r\n        lg: {\r\n            span: 24\r\n        },\r\n        xl: {\r\n            span: 24,\r\n        },\r\n        xxl: {\r\n            span: 16,\r\n        },\r\n    },\r\n\r\n\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst RegisterTemplate = (props) => {\r\n    const [success, setSuccess] = useState(false)\r\n    const redirect = <Redirect to='/login' />\r\n    async function onFinish(values) {\r\n        console.log('Success:', values);\r\n        const { status, data } = await RegisterUser(values)\r\n        console.log(`this is status: ${status}, this is data:${JSON.stringify(data)}`)\r\n        if (status === 201) { //if manager was created, redirect to login\r\n            setSuccess(true)\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    if (success) {\r\n        return (\r\n            redirect\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <h3>Register</h3>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input a valid email',\r\n                                type: 'email',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"name\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your name!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Confirm password\"\r\n                        name=\"Confirm password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            }, ({ getFieldValue }) => ({\r\n                                validator(rule, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject('The two passwords that you entered do not match!');\r\n                                },\r\n                            }),\r\n\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Store\"\r\n                        name=\"store\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the name of your store!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Location\"\r\n                        name=\"location\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input the location of your store!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n        </Button>\r\n                    </Form.Item>\r\n                </Form >\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default RegisterTemplate","import React from 'react'\r\nimport { FormContainer, Background } from '../../../styles/registrationLogin/FormContainer'\r\nimport RegisterTemplate from './RegisterTemplate'\r\nimport Landingnav from '../../Landingnav'\r\nconst RegisterManager = () => {\r\n\r\n\r\n\r\n    return (\r\n        <Background>\r\n            <Landingnav />\r\n            <FormContainer>\r\n                <RegisterTemplate position='manager' />\r\n            </FormContainer>\r\n        </Background>\r\n    )\r\n\r\n}\r\n\r\nexport default RegisterManager","import React, { useState } from 'react'\r\nimport { FormContainer, Background } from '../../../styles/registrationLogin/FormContainer'\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Button } from 'antd';\r\nimport { LoginUser } from './RegistrationLoginAPI'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useAuth, useAuthUpdate } from '../../AuthProvider'\r\nimport Landingnav from '../../Landingnav';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 24,\r\n    },\r\n    wrapperCol: {\r\n        span: 24,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst LoginPage = () => {\r\n\r\n    const [loggedIn, setLoggedIn] = useState({ 'loggedIn': false, 'isManager': false })\r\n    const isAuth = useAuth()\r\n    const setAuth = useAuthUpdate()\r\n    // const [isManager, setIsManager] = useState(false)\r\n    const [emailPassword, setEmailPassword] = useState([])\r\n    const abortController = new AbortController()\r\n\r\n\r\n    async function onFinish(values) {\r\n\r\n        setEmailPassword([values.email, values.password])\r\n\r\n        const { data, status } = await LoginUser(values.email, values.password, abortController)\r\n        if (status !== 200) {\r\n            console.log(`error: ${JSON.stringify(data)}`)\r\n        }\r\n        else {\r\n            localStorage.setItem('accessToken', data.access)\r\n            localStorage.setItem('refreshToken', data.refresh)\r\n\r\n            setAuth({ 'isAuth': true, 'manager': data.manager })\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    if (isAuth.isAuth && !isAuth.manager) {\r\n        return (\r\n            <Redirect to=\"/employee\" />\r\n\r\n        )\r\n    }\r\n    else if (isAuth.isAuth && isAuth.manager) {\r\n        return (\r\n            <Redirect to=\"/manager\" />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Background>\r\n                <Landingnav />\r\n                <FormContainer>\r\n                    <h3>Login</h3>\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your email!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </FormContainer>\r\n            </Background>\r\n\r\n        )\r\n    }\r\n}\r\nexport default LoginPage","import React, { useState } from 'react'\r\nimport { useParams } from \"react-router\";\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { ResetPasswordAPI } from './RegistrationLoginAPI'\r\nimport { FormContainer, Background } from '../../../styles/registrationLogin/FormContainer'\r\nimport { Redirect } from 'react-router-dom'\r\nconst ResetPassword = () => {\r\n    const [submitted, setSubmitted] = useState(false)\r\n    let jToken = useParams().jwt\r\n    console.log(jToken)\r\n    async function onFinish(values) {\r\n        console.log(values)\r\n        let { data, status } = await ResetPasswordAPI(jToken, values)\r\n        console.log(`data: ${data}, status: ${status}`)\r\n        if (status === 200) {\r\n            console.log('should redirect')\r\n            setSubmitted(true)\r\n        }\r\n\r\n    }\r\n\r\n    function onFinishFailed(values) {\r\n        console.log('finish failed called!')\r\n\r\n    }\r\n    if (submitted) {\r\n        return (\r\n            <Redirect to='/' />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n\r\n            <Background>\r\n                <FormContainer>\r\n                    <Form\r\n                        layout='vertical'\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Confirm password\"\r\n                            name=\"Confirm password\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your password!',\r\n                                }, ({ getFieldValue }) => ({\r\n                                    validator(rule, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n\r\n                                        return Promise.reject('The two passwords that you entered do not match!');\r\n                                    },\r\n                                }),\r\n\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n        </Button>\r\n\r\n                    </Form>\r\n                </FormContainer>\r\n            </Background >\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default ResetPassword","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useAuth } from '../components/AuthProvider'\r\nconst PrivateRoute = (props) => {\r\n\r\n    // const canAccess = props.canAccess\r\n    const isAuth = useAuth()\r\n\r\n\r\n    const isManager = isAuth.manager\r\n    const canAccessThisPage = isManager != (JSON.stringify(props.path) === '\"/employee\"') //XOR. if manager cannot access employee and vice versa\r\n\r\n\r\n    if (isAuth.isAuth && canAccessThisPage) {\r\n\r\n        return (\r\n            <Route path={props.path}>\r\n                {props.children}\r\n            </Route>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <Redirect to=\"/login\" />\r\n        )\r\n    }\r\n\r\n}\r\nexport default PrivateRoute","import React, { useEffect } from 'react';\r\nimport { API_HOST } from '../settings'\r\nimport '../styles/App.css';\r\nimport Home from './pages/Home'\r\nimport Manager from './pages/manager/Manager'\r\nimport Employee from './pages/employeePages/Employee'\r\nimport RegisterManager from './pages/registrationLoginPages/RegisterManager'\r\nimport LoginPage from './pages/registrationLoginPages/LoginPage'\r\nimport ResetPassword from './pages/registrationLoginPages/ResetPassword'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { AuthProvider, useAuth, useAuthUpdate } from './AuthProvider'\r\nconst Pages = () => {\r\n\r\n    const isAuth = useAuth()\r\n    const setAuth = useAuthUpdate()\r\n\r\n    async function checkLoggedIn(token, controller) {\r\n        let postData = {\r\n            'refresh': token\r\n        }\r\n\r\n        const response = await fetch(`${API_HOST}/token/myrefresh/`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(postData),\r\n            signal: controller.signal\r\n        })\r\n\r\n        let data = await response.json()\r\n        let status = await response.status\r\n\r\n        return { 'data': data, 'status': status }\r\n    }\r\n\r\n    //call token/refresh. If its valid, render children\r\n    useEffect(() => {\r\n\r\n        const abortController = new AbortController()\r\n\r\n        async function callAuth() {\r\n            if (localStorage.getItem('refreshToken') === null) {\r\n                // redirect to login\r\n                setAuth({ 'isAuth': false, 'manager': false })\r\n            }\r\n            else {\r\n                let token = localStorage.getItem('refreshToken')\r\n                setAuth({ 'isAuth': true, 'manager': false })\r\n                let { data, status } = await checkLoggedIn(token, abortController)\r\n\r\n                if (status === 200) {\r\n\r\n\r\n                    setAuth({ 'isAuth': true, 'manager': data.manager })\r\n\r\n                }\r\n                else {\r\n                    setAuth({ 'isAuth': false, 'manager': false })\r\n                }\r\n            }\r\n        }\r\n\r\n        callAuth()\r\n\r\n        return (() => {\r\n            abortController.abort()\r\n\r\n        })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Router>\r\n\r\n            {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n            <Switch>\r\n                <Route path=\"/register\">\r\n                    <RegisterManager />\r\n                </Route>\r\n                {/* <Route path=\"/register/employee\">\r\n                    <RegisterEmployee />\r\n                </Route> */}\r\n                <Route path=\"/login\">\r\n                    <LoginPage />\r\n                </Route>\r\n                {/* A manager can acccess manager page. An employee cannot and vice versa */}\r\n                <PrivateRoute path=\"/manager\">\r\n                    <Manager />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/employee\">\r\n                    <Employee />\r\n                </PrivateRoute>\r\n                <Route path='/reset-password/:jwt'>\r\n                    <ResetPassword />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n\r\n    )\r\n\r\n}\r\nexport default Pages\r\n","import React from 'react';\nimport './styles/App.css';\nimport { AuthProvider } from './components/AuthProvider'\nimport Pages from './components/Pages'\n\nexport const LoginContext = React.createContext({ 'isAuth': false, 'manager': false })\n// export const ManagerAccessContext = React.createContext(false)\n\nfunction App() {\n  // const [isAuth, setAuth] = useState(false)\n  // const [canAccessManagerPage, setAccess] = useState(false)\n\n\n\n  return (\n    <div className='big-container'>\n      <AuthProvider>\n        <Pages />\n      </AuthProvider>\n\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}